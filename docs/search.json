[
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Introduction",
    "section": "",
    "text": "Introduction\nCe blog est composé d’article comprenant un ensemble d’informations sur la position des sites olympiques, les médailles des athlètes, la météo sur les sites et bien d’autre informations analysées avec des fonctions et un package sur Rstudio."
  },
  {
    "objectID": "posts/post-with-code/JO_olympicsWeather.html",
    "href": "posts/post-with-code/JO_olympicsWeather.html",
    "title": "Les jeux olympiques : OlympicsWeather",
    "section": "",
    "text": "Ce package contient un ensemble de fonction permetant d’obtenir en temps réel les prévisions météo des sites olympiques en vu des JO.\nAfin de realiser ce package nous avons utiliser la librairie usethis, il n’est pas nécessaire d’installer explicitement cette librairie car elle fait partie des librairies qui sont automatiquement installées lors de l’installation de R.\nLes exemples inclus dans ce package pour illustrer les fonctions correspondent au site olympique “Parc des princes” à Paris avec comme coordonnée géographique (48.841319, 2.253076)"
  },
  {
    "objectID": "posts/post-with-code/JO_olympicsWeather.html#perform_request",
    "href": "posts/post-with-code/JO_olympicsWeather.html#perform_request",
    "title": "Les jeux olympiques : OlympicsWeather",
    "section": "Perform_request",
    "text": "Perform_request\nCe code définit une fonction interne appelée perform_request, conçue pour récupérer des données brutes de prévisions météorologiques à partir d’une API en fournissant les coordonnées GPS d’un emplacement spécifique. La fonction utilise les coordonnées de latitude et de longitude pour effectuer une requête vers une URL API définie précédemment. Elle demande des données spécifiques telles que la température, la probabilité de précipitations, etc., sur une base horaire. Les données récupérées sont ensuite formatées et retournées sous forme de tibble, une structure de données de type tableau, pour une utilisation ultérieure. Des exemples d’utilisation sont inclus pour guider les utilisateurs sur la manière d’appeler cette fonction avec les bonnes coordonnées.\nL’exemple inclus retourne une tibble contenant les prévisions météorologiques pour les coordonnées géographiques spécifiées"
  },
  {
    "objectID": "posts/post-with-code/JO_olympicsWeather.html#unnest_response",
    "href": "posts/post-with-code/JO_olympicsWeather.html#unnest_response",
    "title": "Les jeux olympiques : OlympicsWeather",
    "section": "Unnest_response",
    "text": "Unnest_response\nCe code définit une fonction interne nommée unnest_response, qui prend les données brutes de prévisions météo en entrée et les transforme en un format plus lisible. Les données brutes, obtenues avec la fonction perform_request,sont structurées sous forme de listes imbriquées. Cette fonction extrait les informations pertinentes telles que la date et l’heure, la température, la température ressentie, la probabilité de précipitation et la quantité de précipitation, puis les organise dans un tibble facilement exploitable.\nL’exemple inclus retourne une tibble contenant les prévisions météorologiques pour les coordonnées géographiques spécifiées mais dans un format plus clair et lisible."
  },
  {
    "objectID": "posts/post-with-code/JO_olympicsWeather.html#get_weather_forecast",
    "href": "posts/post-with-code/JO_olympicsWeather.html#get_weather_forecast",
    "title": "Les jeux olympiques : OlympicsWeather",
    "section": "get_weather_forecast",
    "text": "get_weather_forecast\nCette fonction, intitulée “Prévision météo des sites olympiques”, permet de récupérer une table de prévisions météorologiques pour une coordonnée GPS donnée ou une adresse. Les prévisions incluent des informations telles que la température, la probabilité de précipitations, etc. Elle peut être utilisée en spécifiant soit les coordonnées GPS sous forme d’un vecteur numérique, soit une adresse en tant que chaîne de caractères. La fonction fait appel à des fonctions internes pour convertir les adresses en coordonnées GPS et pour obtenir les prévisions météorologiques à partir de ces coordonnées. Elle retourne ensuite un tibble contenant les prévisions météo formatées."
  },
  {
    "objectID": "posts/post-with-code/JO_olympicsWeather.html#visualize_weather_forecast",
    "href": "posts/post-with-code/JO_olympicsWeather.html#visualize_weather_forecast",
    "title": "Les jeux olympiques : OlympicsWeather",
    "section": "visualize_weather_forecast",
    "text": "visualize_weather_forecast\nCette fonction, prend en entrée les résultats obtenus à partir de la fonction get_forecast et produit une sortie visuelle avec deux pages de représentation graphique, une page pour les graphiques sur les températures, donc température et température ressentie et une autres pages concernant les précipitations et les probabilités de précipitations.Les graphiques sont générés à partir des données de prévisions météorologiques pour un emplacement spécifié."
  },
  {
    "objectID": "posts/post-with-code/JO_analyse_donnees.html",
    "href": "posts/post-with-code/JO_analyse_donnees.html",
    "title": "Les jeux olympiques : Analyse de données",
    "section": "",
    "text": "L’objectif de ce projet est d’analyser les données des Jeux Olympiques afin de comprendre les performances des athlètes, l’évolution des disciplines et les tendances temporelles."
  },
  {
    "objectID": "posts/post-with-code/JO_analyse_donnees.html#librairies",
    "href": "posts/post-with-code/JO_analyse_donnees.html#librairies",
    "title": "Les jeux olympiques : Analyse de données",
    "section": "Librairies",
    "text": "Librairies\nDans le cadre de ce rapport, nous nous appuierons sur des bibliothèques disponibles dans le CRAN.\n\nlibrary(stringr)\nlibrary(lubridate)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(jsonlite)\nlibrary(RSQLite)"
  },
  {
    "objectID": "posts/post-with-code/JO_analyse_donnees.html#préparation-de-la-base-de-données",
    "href": "posts/post-with-code/JO_analyse_donnees.html#préparation-de-la-base-de-données",
    "title": "Les jeux olympiques : Analyse de données",
    "section": "Préparation de la base de données",
    "text": "Préparation de la base de données\nNous avons dans un premier temps cherché à Listez les fichiers présents dans le dossier data.\n\nknitr::kable(list.files(\"data/\"))\n\n\n\n\nx\n\n\n\n\ndata.sqlite\n\n\nolympics_athletes.json\n\n\nR avancé.Rproj\n\n\ntokyo_athletes.parquet\n\n\n\n\n\nLes fichiers présents dans le dossier data sont au nombres de quatre : data.sqlite ; olympics_athletes.json et tokyo_athletes.parquet.\nLes extensions des différents fichiers sont :\n\ndata.sqlite : L’extension de ce fichier est .sqlite, ce qui indique qu’il s’agit d’une base de données SQLite.\nolympics_athletes.json : L’extension de ce fichier est .json, ce qui indique qu’il s’agit d’un fichier JSON.\ntokyo_athletes.parquet : L’extension de ce fichier est .parquet, ce qui indique qu’il s’agit d’un fichier au format Parquet.\n\n\n.parquet\nNous avons ensuite chercher à lire le fichier .parquet en utilisant la librairie arrow.\n\ntokyo &lt;- arrow::read_parquet(\"data/tokyo_athletes.parquet\")\ndim(tokyo)\n\n[1] 11085     3\n\nknitr::kable(names(tokyo))\n\n\n\n\nx\n\n\n\n\nName\n\n\nNOC\n\n\nDiscipline\n\n\n\n\n\nLe fichier tokyo comprend 11085 données et 3 colonnes qui sont : “Name” , “NOC” et “Discipline”\n\n\n.Json\nEnsuite nous avons chercher à lire le fichier le fichier .json en utilisant la librairie jsonlite.\n\nliste_fichier_json &lt;- list.files(\"data/\",pattern = \"*.json\", full.names = T)\ndata_athletes &lt;- fromJSON(liste_fichier_json)\n\n\n\nConnexion\nLe code suivant, liste les fichiers SQLite dans le dossier “data/”, se connecte à chacun d’eux et récupère la liste des tables présentes dans chaque base de données SQLite, puis affiche les noms de ces tables.\n\nconnexion&lt;- dbConnect(RSQLite::SQLite(), list.files(\"data/\",pattern = \"*.sqlite\", full.names = T))\ndbListTables(connexion)\n\n[1] \"olympics_athletes\" \"tokyo_athletes\"    \"tokyo_medals\"     \n[4] \"tokyo_teams\"      \n\n\nLes tables présentes dans cette table sont olympics_athletes, tokyo_athletes, tokyo_medals et tokyo_teams.\nCréons à présent 2 tables avec dbWriteTable :\n\ndbWriteTable(connexion,\"olympics_athletes\",data_athletes,overwrite = TRUE)\ndbWriteTable(connexion,\"tokyo_athletes\",tokyo,overwrite=TRUE)\n\nAnalysons olympics_athletes :\n\ndbListFields(connexion, \"olympics_athletes\")\n\n [1] \"ID\"     \"Name\"   \"Sex\"    \"Age\"    \"Height\" \"Weight\" \"Team\"   \"NOC\"   \n [9] \"Games\"  \"City\"   \"Sport\"  \"Event\"  \"Medal\" \n\n\nLes colonnes de la table “olympics_athletes” sont : “ID”, “Name”, “Sex”, “Age”, “Height”, “Weight”, “Team”, “NOC”, “Games”, “City”, “Sport”, “Event”, “Medal”.\nDans ces instructions, nous lisons la table “olympics_athletes” depuis la base de données, la convertissons en tibble et stockons le résultat.\n\nolympics_athletes &lt;- dbReadTable(connexion, \"olympics_athletes\",data_athletes)\nolympics_athletes &lt;- as_tibble(olympics_athletes)\nknitr::kable(head(olympics_athletes))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nID\nName\nSex\nAge\nHeight\nWeight\nTeam\nNOC\nGames\nCity\nSport\nEvent\nMedal\n\n\n\n\n1\nA Dijiang\nM\n24\n180\n80\nChina\nCHN\n1992 Summer\nBarcelona\nBasketball\nBasketball Men’s Basketball\nNA\n\n\n2\nA Lamusi\nM\n23\n170\n60\nChina\nCHN\n2012 Summer\nLondon\nJudo\nJudo Men’s Extra-Lightweight\nNA\n\n\n3\nGunnar Nielsen Aaby\nM\n24\nNA\nNA\nDenmark\nDEN\n1920 Summer\nAntwerpen\nFootball\nFootball Men’s Football\nNA\n\n\n4\nEdgar Lindenau Aabye\nM\n34\nNA\nNA\nDenmark/Sweden\nDEN\n1900 Summer\nParis\nTug-Of-War\nTug-Of-War Men’s Tug-Of-War\nGold\n\n\n5\nChristine Jacoba Aaftink\nF\n21\n185\n82\nNetherlands\nNED\n1988 Winter\nCalgary\nSpeed Skating\nSpeed Skating Women’s 500 metres\nNA\n\n\n5\nChristine Jacoba Aaftink\nF\n21\n185\n82\nNetherlands\nNED\n1988 Winter\nCalgary\nSpeed Skating\nSpeed Skating Women’s 1,000 metres\nNA\n\n\n\n\n\n\n\nColonne “Sex”\nDans cette instruction, nous convertissons la colonne “Sex” en variable catégorielle\n\nolympics_athletes &lt;- olympics_athletes %&gt;%\n  mutate(Sex = as.factor(Sex))\n\n\n\nColonne Games\nDans cette série d’instructions, nous scindons la colonne “Games” en deux colonnes distinctes, “Year” et “Season”, puis nous ajoutons une colonne booléenne “isSummer” pour indiquer si les jeux sont d’été ou d’hiver, enfin nous supprimons la colonne “Season”.\n\nolympics_athletes &lt;- olympics_athletes %&gt;%\n  separate(col = Games, into = c(\"Year\", \"Season\"), sep = \" \", convert = TRUE) %&gt;%\n  mutate(isSummer = Season == \"Summer\") %&gt;%\n  select(-Season)"
  },
  {
    "objectID": "posts/post-with-code/JO_analyse_donnees.html#moyenne-dâge",
    "href": "posts/post-with-code/JO_analyse_donnees.html#moyenne-dâge",
    "title": "Les jeux olympiques : Analyse de données",
    "section": "Moyenne d’âge",
    "text": "Moyenne d’âge\nNous nous sommes ensuite intéressé à la moyenne d’âge pour chaque édition des JO d’été.\n\nmoyenne_age_par_edition &lt;- olympics_athletes %&gt;%\n  filter(isSummer) %&gt;%\n  group_by(Year) %&gt;%\n  summarize(moyenne_age = mean(Age, na.rm = TRUE))\n\nedition_plus_jeune &lt;- moyenne_age_par_edition %&gt;%\n  filter(moyenne_age == min(moyenne_age, na.rm = TRUE))\n\nedition_plus_vieille &lt;- moyenne_age_par_edition %&gt;%\n  filter(moyenne_age == max(moyenne_age, na.rm = TRUE))\n\nknitr::kable(edition_plus_jeune)\n\n\n\n\nYear\nmoyenne_age\n\n\n\n\n1896\n23.58065\n\n\n\n\nknitr::kable(edition_plus_vieille)\n\n\n\n\nYear\nmoyenne_age\n\n\n\n\n1932\n30.1956\n\n\n\n\n\nNous apprenons ainsi que l’édition avec la moyenne d’âge la plus jeune était celle de 1896, avec un âge de 23 ans et l’édition avec la moyenne d’âge la plus âgé était celle de 1932, avec un âge de 30 ans."
  },
  {
    "objectID": "posts/post-with-code/JO_analyse_donnees.html#taille-des-athlètes",
    "href": "posts/post-with-code/JO_analyse_donnees.html#taille-des-athlètes",
    "title": "Les jeux olympiques : Analyse de données",
    "section": "Taille des athlètes",
    "text": "Taille des athlètes\nCe code supprime les lignes contenant des valeurs manquantes, puis il identifie la discipline sportive des athlètes féminines participant aux jeux d’été ayant la plus grande taille moyenne, en calculant la taille maximale pour chaque discipline. Enfin, il compte le nombre de fois où chaque discipline a été celle avec les athlètes les plus grandes dans chaque édition des jeux olympiques d’été. Ce code a été principalement réalisé avec le package tibble.\n\nolympics_athletes &lt;- olympics_athletes %&gt;%\n   drop_na()\n\ndiscipline_max_taille &lt;- olympics_athletes %&gt;%\n  filter(Sex == \"F\" & isSummer) %&gt;%\n  group_by(Sport) %&gt;%\n  summarize(max_taille = max(Height, na.rm = TRUE)) %&gt;%\n  filter(max_taille == max(max_taille)) %&gt;%\n  select(Sport)\n\n\nknitr::kable(discipline_max_taille)\n\n\n\n\nSport\n\n\n\n\nBasketball\n\n\n\n\ndiscipline_max_taille_par_edition &lt;- olympics_athletes %&gt;%\n  filter(Sex == \"F\") %&gt;%\n  group_by(Year, Sport) %&gt;%\n  summarize(max_taille = max(Height, na.rm = TRUE), .groups = \"drop\") %&gt;%\n  group_by(Year) %&gt;%\n  filter(max_taille == max(max_taille, na.rm = TRUE))\n\n\nknitr::kable(head(discipline_max_taille_par_edition))\n\n\n\n\nYear\nSport\nmax_taille\n\n\n\n\n1920\nFigure Skating\n165\n\n\n1924\nSwimming\n167\n\n\n1928\nAthletics\n181\n\n\n1932\nAthletics\n182\n\n\n1936\nAthletics\n182\n\n\n1948\nAthletics\n179\n\n\n\n\nnombre_max_taille_par_discipline &lt;- discipline_max_taille_par_edition %&gt;%\n  count(Sport, name = \"Nombre_total_éditions\")\n\ntotal_par_discipline &lt;- nombre_max_taille_par_discipline %&gt;%\n  group_by(Sport) %&gt;%\n  summarize(Total = sum(Nombre_total_éditions))\ntotal_par_discipline &lt;- head(total_par_discipline[order(total_par_discipline$Total, decreasing = TRUE), ], 3)\n\n\nknitr::kable(total_par_discipline)\n\n\n\n\nSport\nTotal\n\n\n\n\nAthletics\n10\n\n\nBasketball\n10\n\n\nIce Hockey\n2\n\n\n\n\n\nOn constate que le basketball compte parmi les disciplines où les athlètes féminines sont les plus grandes, que le patinage artistique était la discipline présentant les athlètes les plus grandes en 1920, et que tout au long des différentes éditions, l’athlétisme et le basketball ont été les sports qui ont compté le plus grand nombre d’athlètes de grande taille.”"
  },
  {
    "objectID": "posts/post-with-code/JO_analyse_donnees.html#dates-éditions",
    "href": "posts/post-with-code/JO_analyse_donnees.html#dates-éditions",
    "title": "Les jeux olympiques : Analyse de données",
    "section": "Dates éditions",
    "text": "Dates éditions\nCe code extrait toutes les dates au format “jour mois année” présentes dans le texte et les stocke dans une liste appelée dates, puis affiche cette liste.\n\ntexte &lt;- \"Les jeux olympiques d’été se déroulent normalement tous les 4 ans, durant les mois de Juillet et Août. Les jeux de Rio ont eu lieu du 5 Août 2016 au 20 Août 2016, ceux de Tokyo du 23 Juillet 2021 au 8 Août 2021, et ceux de Paris auront lieu du 26 Juillet 2024 au 11 Août 2024. Plus de 10000 athlètes sont attendus du monde entier à Paris.\"\n\nregex_date &lt;- \"\\\\d{1,2} (?:Janvier|Février|Mars|Avril|Mai|Juin|Juillet|Août|Septembre|Octobre|Novembre|Décembre) \\\\d{4}\"\n\ndates &lt;- str_extract_all(texte, regex_date)\n\nprint(dates)\n\n[[1]]\n[1] \"5 Août 2016\"     \"20 Août 2016\"    \"23 Juillet 2021\" \"8 Août 2021\"    \n[5] \"26 Juillet 2024\" \"11 Août 2024\"   \n\n\n\nMois\nCe code extrait les dates des éditions des Jeux Olympiques à partir d’un texte, puis remplace les noms des mois par leur numéro pour les rendre convertibles en date.\n\ndates_modifiees &lt;- str_replace_all(texte, c(\"Janvier\" = \"01\", \"Février\" = \"02\", \"Mars\" = \"03\", \"Avril\" = \"04\", \n                                            \"Mai\" = \"05\", \"Juin\" = \"06\", \"Juillet\" = \"07\", \"Août\" = \"08\", \n                                            \"Septembre\" = \"09\", \"Octobre\" = \"10\", \"Novembre\" = \"11\", \"Décembre\" = \"12\"))\n\n\nknitr::kable(dates_modifiees)\n\n\n\n\n\n\n\nx\n\n\n\n\nLes jeux olympiques d’été se déroulent normalement tous les 4 ans, durant les mois de 07 et 08. Les jeux de Rio ont eu lieu du 5 08 2016 au 20 08 2016, ceux de Tokyo du 23 07 2021 au 8 08 2021, et ceux de Paris auront lieu du 26 07 2024 au 11 08 2024. Plus de 10000 athlètes sont attendus du monde entier à Paris.\n\n\n\n\n\n\n\nDate\nCe code extrait les dates des éditions des Jeux Olympiques à partir d’un texte modifié, puis les convertit en format de date (jour-mois-année).\n\ntexte_modifie &lt;- \"Les jeux olympiques d’été se déroulent normalement tous les 4 ans, durant les mois de 07 et 08. Les jeux de Rio ont eu lieu du 5 08 2016 au 20 08 2016, ceux de Tokyo du 23 07 2021 au 8 08 2021, et ceux de Paris auront lieu du 26 07 2024 au 11 08 2024. Plus de 10000 athlètes sont attendus du monde entier à Paris.\"\n\nregex_date_bis &lt;- \"\\\\d{1,2} \\\\d{2} \\\\d{4}\"\n\ndates &lt;- str_extract_all(texte_modifie, regex_date_bis)\n\ndates_converties &lt;- lapply(dates, function(date_str) dmy(date_str))\n\ndates_converties\n\n[[1]]\n[1] \"2016-08-05\" \"2016-08-20\" \"2021-07-23\" \"2021-08-08\" \"2024-07-26\"\n[6] \"2024-08-11\"\n\n\n\n\nDifférence entre les éditions\nCe code calcule les différences en jours et en semaines entre les dates des Jeux Olympiques de Rio et Tokyo, ainsi que entre les dates des Jeux Olympiques de Tokyo et Paris.\n\n#différence en jours entre Rio et Tokyo\njours_rio_tokyo &lt;- difftime(dates_converties[[1]][3],dates_converties[[1]][2], units = \"days\")\n\njours_rio_tokyo\n\nTime difference of 1798 days\n\n#différence en semaines\nsemaines_rio_tokyo &lt;- difftime(dates_converties[[1]][3],dates_converties[[1]][2], units = \"weeks\")\n\nsemaines_rio_tokyo\n\nTime difference of 256.8571 weeks\n\n#différence en jours entre Tokyo et Paris\njours_tokyo_paris &lt;- difftime(dates_converties[[1]][5],dates_converties[[1]][4], units = \"days\")\n\njours_tokyo_paris\n\nTime difference of 1083 days\n\n#différence en semaines\nsemaines_tokyo_paris &lt;- difftime(dates_converties[[1]][5],dates_converties[[1]][4], units = \"weeks\")\n\nsemaines_tokyo_paris\n\nTime difference of 154.7143 weeks\n\nsemaines_rio_tokyo\n\nTime difference of 256.8571 weeks\n\n\nAinsi, nous constatons que l’écart entre les Jeux Olympiques de Rio en 2016 et ceux de Tokyo en 2021 était de 1798 jours, soit environ 256,9 semaines entre le début et la fin de chaque édition. De manière similaire, l’intervalle entre les Jeux précédents de Tokyo et ceux de Paris en 2024 est de 1083 jours, équivalant à environ 154,7 semaines.\nL’intervalle entre les Jeux de Rio et ceux de Tokyo est presque 2 ans plus long que celui entre les Jeux de Tokyo et ceux de Paris."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Les articles",
    "section": "",
    "text": "Bienvenue !\n\n\n\n\n\nBienvenue sur mon blog où je partage mes projets. N’hésitez pas à explorer les différents articles.\nBonne lecture !\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\nPrésentation librairie\n\n\n\n\n\n\n\n\n\n\n\n\nMar 10, 2024\n\n\nCassandre Orhan\n\n\n\n\n\n\n  \n\n\n\n\nLes jeux olympiques : OlympicsWeather\n\n\n\n\n\n\n\n\n\n\n\n\nMar 9, 2024\n\n\nCassandre Orhan\n\n\n\n\n\n\n  \n\n\n\n\nLes jeux olympiques : Analyse de données\n\n\n\n\n\n\n\n\n\n\n\n\nMar 8, 2024\n\n\nCassandre Orhan\n\n\n\n\n\n\n  \n\n\n\n\nLes jeux olympiques : médailles des athlètes\n\n\n\n\n\n\n\n\n\n\n\n\nMar 7, 2024\n\n\nCassandre Orhan\n\n\n\n\n\n\n  \n\n\n\n\nLes jeux olympiques : position des sites\n\n\n\n\n\n\n\n\n\n\n\n\nMar 6, 2024\n\n\nCassandre Orhan\n\n\n\n\n\n\n  \n\n\n\n\nIntroduction\n\n\n\n\n\n\n\n\n\n\n\n\nMar 5, 2024\n\n\nCassandre Orhan\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Présentation",
    "section": "",
    "text": "Je m’appelle Cassandre Orhan et je suis actuellement étudiante à l’IAE de Nantes, en première année de Master en Économétrie et Statistique.\nCe projet a été réalisé dans le cadre d’un de mes cours, “R Avancé et Introduction à Git”, enseigné par M. Nedellec. J’ai utilisé RStudio pour le développement et la gestion du code source, et vous pouvez retrouver les sources de ce projet sur mon GitHub.\nN’hésitez pas à explorer les différents projets que j’ai partagés sur ce sites. J’espère que vous trouverez des informations intéressantes et utiles !"
  },
  {
    "objectID": "about.html#bienvenue-sur-mon-blog",
    "href": "about.html#bienvenue-sur-mon-blog",
    "title": "Présentation",
    "section": "",
    "text": "Je m’appelle Cassandre Orhan et je suis actuellement étudiante à l’IAE de Nantes, en première année de Master en Économétrie et Statistique.\nCe projet a été réalisé dans le cadre d’un de mes cours, “R Avancé et Introduction à Git”, enseigné par M. Nedellec. J’ai utilisé RStudio pour le développement et la gestion du code source, et vous pouvez retrouver les sources de ce projet sur mon GitHub.\nN’hésitez pas à explorer les différents projets que j’ai partagés sur ce sites. J’espère que vous trouverez des informations intéressantes et utiles !"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Présentation librairie",
    "section": "",
    "text": "Le package olympicsWeather est une bibliothèque R qui fournit des fonctionnalités pour accéder aux données météorologiques des sites où se dérouleront les Jeux olympiques 2024 à Paris.\n\n\nLe package olympicsWeather offre une manière pratique d’accéder aux données météorologiques des Jeux olympiques pour les analyses et la visualisation. Il contient des fonctionnalités pour récupérer les données météorologiques à partir de sources fiables et les manipuler dans un format adapté à l’analyse.\n\n\n\nPour installer le package olympicsWeather depuis GitHub, vous pouvez utiliser le package remotes. Voici les étapes à suivre :\n\nremotes::install_github(\"Cassandreorhan/olympicsWeather\")\n\nLe package est à présent installé, dans la suite nous allons découvrir pourquoi et comment l’utiliser.\n\n\n\nCe package olympicsWeather peut être utile si vous souhaiter obtenir les prévisons météo du Stade de France pour une semaine, du 9 mars au 15 mars 2024. Dans un premier temps, il faut appeler la librairie du package :\n\nlibrary(olympicsWeather)  \n\nEnsuite, nous pouvons commencer à l’utiliser, donc on appelle la fonction “get_weather_forecast” qui permet d’obtenir dans un tableau les prévision météos selon la date/heure, la température en Celsius, la température ressentie, les précipitations et les probabilités de précipitation.\n\nprevision_stade_france &lt;- olympicsWeather::get_weather_forecast(\"Stade de France\")\nknitr::kable(head(prevision_stade_france))\n\n\n\n\n\n\n\n\n\n\n\ndate_heure\ntemperature_celsius\ntemperature_ressentie_celsius\nprecipitation_proba\nprecipitation\n\n\n\n\n2024-03-09T00:00\n8.9\n5.9\n0\n0\n\n\n2024-03-09T01:00\n8.1\n5.3\n0\n0\n\n\n2024-03-09T02:00\n7.4\n4.6\n0\n0\n\n\n2024-03-09T03:00\n6.8\n4.1\n0\n0\n\n\n2024-03-09T04:00\n6.4\n3.3\n0\n0\n\n\n2024-03-09T05:00\n6.3\n3.2\n0\n0\n\n\n\n\n\nAfin de mieux visualiser notre prévision, nous pouvons faire appel à une autre fonction du package “visualize_weather_forecast”, elle prend en entrée la localisation souhaitée et retourne deux pages de représentation visuelle selon les tempétatures et les précipitations.\n\nvisualize_weather_forecast(\"Stade de France\")\n\n\n\n\n\n\n\nAinsi, le stade de france enregistrera des températures fluctuantes durant cette semaine avec un pic de chaleur le 13 mars d’environ 18 degrés Celsius. Concernant les précipitations, la probabilité d’avoir de la pluie le 9 mars à 18h est forte, 94% mais la pluviométrie la plus importante sera le 10 mars entre 16h et 17h puisqu’on attend 1,3 cm de précipitation."
  },
  {
    "objectID": "posts/post-with-code/index.html#librairie-olympicsweather",
    "href": "posts/post-with-code/index.html#librairie-olympicsweather",
    "title": "Présentation librairie",
    "section": "",
    "text": "Le package olympicsWeather est une bibliothèque R qui fournit des fonctionnalités pour accéder aux données météorologiques des sites où se dérouleront les Jeux olympiques 2024 à Paris.\n\n\nLe package olympicsWeather offre une manière pratique d’accéder aux données météorologiques des Jeux olympiques pour les analyses et la visualisation. Il contient des fonctionnalités pour récupérer les données météorologiques à partir de sources fiables et les manipuler dans un format adapté à l’analyse.\n\n\n\nPour installer le package olympicsWeather depuis GitHub, vous pouvez utiliser le package remotes. Voici les étapes à suivre :\n\nremotes::install_github(\"Cassandreorhan/olympicsWeather\")\n\nLe package est à présent installé, dans la suite nous allons découvrir pourquoi et comment l’utiliser.\n\n\n\nCe package olympicsWeather peut être utile si vous souhaiter obtenir les prévisons météo du Stade de France pour une semaine, du 9 mars au 15 mars 2024. Dans un premier temps, il faut appeler la librairie du package :\n\nlibrary(olympicsWeather)  \n\nEnsuite, nous pouvons commencer à l’utiliser, donc on appelle la fonction “get_weather_forecast” qui permet d’obtenir dans un tableau les prévision météos selon la date/heure, la température en Celsius, la température ressentie, les précipitations et les probabilités de précipitation.\n\nprevision_stade_france &lt;- olympicsWeather::get_weather_forecast(\"Stade de France\")\nknitr::kable(head(prevision_stade_france))\n\n\n\n\n\n\n\n\n\n\n\ndate_heure\ntemperature_celsius\ntemperature_ressentie_celsius\nprecipitation_proba\nprecipitation\n\n\n\n\n2024-03-09T00:00\n8.9\n5.9\n0\n0\n\n\n2024-03-09T01:00\n8.1\n5.3\n0\n0\n\n\n2024-03-09T02:00\n7.4\n4.6\n0\n0\n\n\n2024-03-09T03:00\n6.8\n4.1\n0\n0\n\n\n2024-03-09T04:00\n6.4\n3.3\n0\n0\n\n\n2024-03-09T05:00\n6.3\n3.2\n0\n0\n\n\n\n\n\nAfin de mieux visualiser notre prévision, nous pouvons faire appel à une autre fonction du package “visualize_weather_forecast”, elle prend en entrée la localisation souhaitée et retourne deux pages de représentation visuelle selon les tempétatures et les précipitations.\n\nvisualize_weather_forecast(\"Stade de France\")\n\n\n\n\n\n\n\nAinsi, le stade de france enregistrera des températures fluctuantes durant cette semaine avec un pic de chaleur le 13 mars d’environ 18 degrés Celsius. Concernant les précipitations, la probabilité d’avoir de la pluie le 9 mars à 18h est forte, 94% mais la pluviométrie la plus importante sera le 10 mars entre 16h et 17h puisqu’on attend 1,3 cm de précipitation."
  },
  {
    "objectID": "posts/post-with-code/index.html#prévision-pour-tahiti",
    "href": "posts/post-with-code/index.html#prévision-pour-tahiti",
    "title": "Présentation librairie",
    "section": "Prévision pour Tahiti",
    "text": "Prévision pour Tahiti\nMaintenant, si vous souhaitez obtenir les prévisions météos pour Tahiti qui accueillera en discipline olympique les épreuves de surf, voici comment vous pouvez procéder.\nDans un premier temps, de la même façon que pour le stade de France, vous pouvez utiliser la fonction “get_weather_forecast” pour obtenir les prévisions sous forme de tableau.\n\nprevision_tahiti &lt;- get_weather_forecast(\"Tahiti\")\nknitr::kable(head(prevision_tahiti))\n\n\n\n\n\n\n\n\n\n\n\ndate_heure\ntemperature_celsius\ntemperature_ressentie_celsius\nprecipitation_proba\nprecipitation\n\n\n\n\n2024-03-09T00:00\n17.4\n20.4\n100\n0.0\n\n\n2024-03-09T01:00\n17.6\n19.0\n100\n0.1\n\n\n2024-03-09T02:00\n17.4\n18.2\n100\n0.1\n\n\n2024-03-09T03:00\n17.1\n18.0\n100\n0.8\n\n\n2024-03-09T04:00\n17.0\n17.9\n100\n1.4\n\n\n2024-03-09T05:00\n17.0\n18.1\n100\n1.4\n\n\n\n\n\nNous pouvons à présent utiliser la fonction “visualize_weather_forecast” afin de visualiser graphiquement nos prévisions.\n\nvisualize_weather_forecast(\"Tahiti\")\n\n\n\n\n\n\n\nAinsi, Tahiti enregistrera des températures fluctuantes durant cette semaine avec un pic de chaleur le 13 mars d’environ 18,6 degrés celsius. Concernant les précipitations, la probabilité d’avoir de la pluie le 10 mars à 3h est forte, 100et c’est également l’heure où la pluviométrie sera la plus importante puisqu’on attend 1,9 cm de précipitation à cette date.\n\nPour les coordonnées GPS 43.276703, 5.334791\nEnfin, si vous souhaitez obtenir des prévisions météos des coordonnées GPS avec comme exemple les coordonnées 43.276703, 5.334791 , voici comment vous pouvez procéder.\nDans un premier temps, de la même façon que pour les prévisions précedentes, vous pouvez utiliser la fonction “get_weather_forecast” pour obtenir les prévisions sous forme de tableau.\n\nprevision_lat_long&lt;-get_weather_forecast(c(43.276703, 5.334791))\nknitr::kable(head(prevision_lat_long))\n\n\n\n\n\n\n\n\n\n\n\ndate_heure\ntemperature_celsius\ntemperature_ressentie_celsius\nprecipitation_proba\nprecipitation\n\n\n\n\n2024-03-09T00:00\n11.6\n7.6\n42\n0\n\n\n2024-03-09T01:00\n11.9\n7.0\n36\n0\n\n\n2024-03-09T02:00\n12.1\n6.9\n29\n0\n\n\n2024-03-09T03:00\n12.2\n6.7\n23\n0\n\n\n2024-03-09T04:00\n12.6\n6.7\n31\n0\n\n\n2024-03-09T05:00\n12.6\n6.7\n40\n0\n\n\n\n\n\nNous pouvons à présent utiliser la fonction “visualize_weather_forecast” afin de visualiser graphiquement nos prévisions.\n\nvisualize_weather_forecast(c(43.276703, 5.334791))\n\n\n\n\n\n\n\nAinsi, ces coordonnées GPS, qui correspondent au Parc national des Calanques à Marseille, enregistreront des températures fluctuantes durant cette semaine avec un pic de chaleur le 15 mars d’environ 17 degrés Celsius. Concernant les précipitations, la probabilité d’avoir de la pluie le 9 mars de 15h à minuit est forte, 100% et c’est égalementà cette date que la pluviométrie sera la plus importante puisqu’on attend 9,8 cm de précipitation entre 22h et 23H ."
  },
  {
    "objectID": "posts/post-with-code/JO_medailles.html",
    "href": "posts/post-with-code/JO_medailles.html",
    "title": "Les jeux olympiques : médailles des athlètes",
    "section": "",
    "text": "L’objectif de ce rapport est d’analyser les performances des athlètes aux Jeux Olympiques en termes d’éditions et de médailles remportées. Cette analyse nous permettra de comprendre les tendances historiques en matière de succès sportifs et d’identifier les pays dominants dans l’histoire des Jeux Olympiques."
  },
  {
    "objectID": "posts/post-with-code/JO_medailles.html#librairie",
    "href": "posts/post-with-code/JO_medailles.html#librairie",
    "title": "Les jeux olympiques : médailles des athlètes",
    "section": "Librairie",
    "text": "Librairie\nDans le cadre de ce rapport, nous nous appuierons sur des bibliothèques disponibles dans le CRAN.\n\nlibrary(rvest)\nlibrary(purrr)\nlibrary(stringr)\nlibrary(tibble)"
  },
  {
    "objectID": "posts/post-with-code/JO_medailles.html#préparation-de-la-base-de-données",
    "href": "posts/post-with-code/JO_medailles.html#préparation-de-la-base-de-données",
    "title": "Les jeux olympiques : médailles des athlètes",
    "section": "Préparation de la base de données",
    "text": "Préparation de la base de données\nNous avons dans un premier temps importé notre base de données :\n\nlist_tables &lt;-\n  session(\n    \"https://fr.wikipedia.org/wiki/Liste_des_m%C3%A9daill%C3%A9s_olympiques\")|&gt; \n  html_elements(\".wikitable\") |&gt;\n  html_table()\n\nL’objet list_tables contient les données de toutes les tables HTML de classe “wikitable” trouvées sur la page Wikipedia spécifiée. Dans ce cas, il contient la liste des médaillés olympiques selon six tables distinctes :\n\nSports des Jeux Olympiques d’été\nSports des Jeux Olympiques d’hiver\nAnciens sports d’été\nAnciens sports d’hiver\nPar édition, Jeux Olympiques d’été\nPar édition, Jeux Olympiques d’hiver\n\nCes différentes tables contiennent des informations sur les médailles olympiques attribuées aux athlètes dans différentes disciplines et éditions des Jeux Olympiques,"
  },
  {
    "objectID": "posts/post-with-code/JO_medailles.html#médaillés-des-jeux-olympiques-dété",
    "href": "posts/post-with-code/JO_medailles.html#médaillés-des-jeux-olympiques-dété",
    "title": "Les jeux olympiques : médailles des athlètes",
    "section": "Médaillés des jeux olympiques d’été",
    "text": "Médaillés des jeux olympiques d’été\nLa première étape de cet exercice consistait à préparer la base de données en supprimant les lignes et les colonnes inutiles, ainsi qu’en renommant les colonnes et les lignes pour plus de lisibilité. Cette étape est essentielle pour assurer que les données sont bien organisées et faciles à analyser par la suite. En nettoyant la base de données et en la structurant de manière claire, nous pouvons faciliter les étapes d’analyse et d’interprétation des données\n\nsport_ete &lt;- data.frame(list_tables[1])\n\nsport_ete &lt;- sport_ete[-1,-1]\n\nnames(sport_ete)&lt;-c(\"Discipline\", \"Annees\", \"Editions\", \"Epreuves_2020\", \"Or\", \"Argent\", \"Bronze\", \"Total\", \"Athletes_medailles\", \"Athletes_or\")\n\nsport_ete[c(\"Editions\", \"Epreuves_2020\", \"Or\", \"Argent\", \"Bronze\", \"Total\")] &lt;- lapply(sport_ete[c(\"Editions\", \"Epreuves_2020\", \"Or\", \"Argent\", \"Bronze\", \"Total\")], as.integer)\n\nsport_ete$Athletes_or &lt;- ifelse(sport_ete$Athletes_or == \"17 athlètes avec 1 médaille d'or\", \"Chandler Egan (USA) (1-1-0)\", sport_ete$Athletes_or)\nsport_ete$Athletes_or [c(30)] &lt;- \"Dezső Gyarmati (HUN) (3-1-1)\"\n\nstr(sport_ete)\n\n'data.frame':   30 obs. of  10 variables:\n $ Discipline        : chr  \"Athlétisme\" \"Aviron\" \"Badminton\" \"Basket-ball\" ...\n $ Annees            : chr  \"Depuis 1896\" \"Depuis 1900\" \"Depuis 1992\" \"Depuis 1936\" ...\n $ Editions          : int  29 28 8 20 26 20 29 26 29 27 ...\n $ Epreuves_2020     : int  48 14 5 4 13 16 22 6 12 2 ...\n $ Or                : int  1028 269 39 32 266 242 263 151 223 34 ...\n $ Argent            : int  1030 268 39 32 266 241 261 149 223 34 ...\n $ Bronze            : int  1027 273 43 32 472 243 260 148 221 35 ...\n $ Total             : int  3085 810 121 96 1004 726 784 448 667 103 ...\n $ Athletes_medailles: chr  \"Paavo Nurmi (FIN) (9-3-0)\" \"Elisabeta Lipă (ROU) (5-2-1)\" \"Gao Ling (CHN) (2-1-1)\" \"Teresa Edwards (USA) (4-0-1)\" ...\n $ Athletes_or       : chr  \"Paavo Nurmi (FIN) (9-3-0) Carl Lewis (USA) (9-1-0)\" \"Elisabeta Lipă (ROU) (5-2-1) Georgeta Damian (ROU) (5-0-1) Steven Redgrave (GBR) (5-0-1)\" \"Gao Ling (CHN) (2-1-1) Kim Dong-moon (KOR) (2-0-1) Zhang Nan (CHN) (2-0-1) Ge Fei (CHN) (2-0-0) Gu Jun (CHN) (2\"| __truncated__ \"Teresa Edwards (USA) (4-0-1) Sue Bird (USA) (4-0-0) Tamika Catchings (USA) (4-0-0) Lisa Leslie (USA) (4-0-0) Di\"| __truncated__ ...\n\ndim(sport_ete)\n\n[1] 30 10\n\nknitr::kable(head(sport_ete))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDiscipline\nAnnees\nEditions\nEpreuves_2020\nOr\nArgent\nBronze\nTotal\nAthletes_medailles\nAthletes_or\n\n\n\n\n2\nAthlétisme\nDepuis 1896\n29\n48\n1028\n1030\n1027\n3085\nPaavo Nurmi (FIN) (9-3-0)\nPaavo Nurmi (FIN) (9-3-0) Carl Lewis (USA) (9-1-0)\n\n\n3\nAviron\nDepuis 1900\n28\n14\n269\n268\n273\n810\nElisabeta Lipă (ROU) (5-2-1)\nElisabeta Lipă (ROU) (5-2-1) Georgeta Damian (ROU) (5-0-1) Steven Redgrave (GBR) (5-0-1)\n\n\n4\nBadminton\nDepuis 1992\n8\n5\n39\n39\n43\n121\nGao Ling (CHN) (2-1-1)\nGao Ling (CHN) (2-1-1) Kim Dong-moon (KOR) (2-0-1) Zhang Nan (CHN) (2-0-1) Ge Fei (CHN) (2-0-0) Gu Jun (CHN) (2-0-0) Lin Dan (CHN) (2-0-0) Zhang Jun (CHN) (2-0-0) Zhang Ning (CHN) (2-0-0) Zhao Yunlei (CHN) (2-0-0)\n\n\n5\nBasket-ball\nDepuis 1936\n20\n4\n32\n32\n32\n96\nTeresa Edwards (USA) (4-0-1)\nTeresa Edwards (USA) (4-0-1) Sue Bird (USA) (4-0-0) Tamika Catchings (USA) (4-0-0) Lisa Leslie (USA) (4-0-0) Diana Taurasi (USA) (4-0-0)\n\n\n6\nBoxe\n1904, 1908,depuis 1920\n26\n13\n266\n266\n472\n1004\nLászló Papp (HUN) (3-0-0) Félix Savón (CUB) (3-0-0) Teófilo Stevenson (CUB) (3-0-0) Roniel Iglesias (CUB) (2-0-1) Boris Lagutin (URS) (2-0-1) Oleg Saitov (RUS) (2-0-1) Zou Shiming (CHN) (2-0-1) Roberto Cammarelle (ITA) (1-1-1) Zbigniew Pietrzykowski (POL) (0-1-2) Arnold Vanderlyde (NED) (0-0-3)\nLászló Papp (HUN) (3-0-0) Félix Savón (CUB) (3-0-0) Teófilo Stevenson (CUB) (3-0-0)\n\n\n7\nCanoë-kayak\nDepuis 1936\n20\n16\n242\n241\n243\n726\nBirgit Fischer (GER) (8-4-0)\nBirgit Fischer (GER) (8-4-0)\n\n\n\n\n\nCette base de données, référençant les médaillés pour les Jeux Olympiques d’été, est composée de 10 colonnes et 30 lignes. Les colonnes sont :\n\nLes disciplines pratiquées,\nDes informations sur leurs années d’édition, depuis quand ? Est ce qu’il y a eu des coupures ?\nLe nombre d’éditions,\nLe nombre d’épreuves durant la dernière édition correspondant à 2020,\nLe nombre de médailles d’or, d’argent et de bronze ainsi que le total de médailles,\nLes athlètes médaillés ainsi que les athlètes ayant obtenu au moins une médaille d’or."
  },
  {
    "objectID": "posts/post-with-code/JO_medailles.html#disciplines-avec-le-plus-de-médailles-distribués",
    "href": "posts/post-with-code/JO_medailles.html#disciplines-avec-le-plus-de-médailles-distribués",
    "title": "Les jeux olympiques : médailles des athlètes",
    "section": "Disciplines avec le plus de médailles distribués",
    "text": "Disciplines avec le plus de médailles distribués\nL’objectif de ce code est de déterminer le top 3 des disciplines avec le plus grand nombre de médailles distribuées aux Jeux Olympiques. Pour ce faire, nous commençons par trier la colonne contenant le nombre total de médailles dans un ordre croissant. Ensuite, nous sélectionnons les trois disciplines les plus pertinentes pour notre analyse.\n\nmax_tt&lt;-max(sport_ete$Total)\ntop_3 &lt;- head(sport_ete[order(sport_ete$Total, decreasing = TRUE), ], 3)\nknitr::kable(top_3[c(1,8)])\n\n\n\n\n\nDiscipline\nTotal\n\n\n\n\n2\nAthlétisme\n3085\n\n\n19\nNatation(hommes, femmes)\n1814\n\n\n18\nLutte\n1358\n\n\n\n\n\nNous constatons ainsi que les disciplines avec le plus grand nombre de médailles distribuées sont l’athlétisme, la natation et la lutte."
  },
  {
    "objectID": "posts/post-with-code/JO_medailles.html#disciplines-avec-le-moins-de-dépreuve-en-2020",
    "href": "posts/post-with-code/JO_medailles.html#disciplines-avec-le-moins-de-dépreuve-en-2020",
    "title": "Les jeux olympiques : médailles des athlètes",
    "section": "Disciplines avec le moins de d’épreuve en 2020",
    "text": "Disciplines avec le moins de d’épreuve en 2020\nL’objectif de ce code est de trier les disciplines en fonction du nombre d’épreuves le moins élevé lors des Jeux Olympiques de 2020, on effectue un trie dans un ordre décroissant. En effectuant ce tri, nous pouvons identifier les disciplines qui ont eu moins de représentation ou de diversité d’épreuves lors de la dernière édition des Jeux Olympiques\n\nepreuves_2020&lt;-head(sport_ete[order(sport_ete$Epreuves_2020,decreasing=FALSE),])\nknitr::kable(epreuves_2020[c(1,4)])\n\n\n\n\n\nDiscipline\nEpreuves_2020\n\n\n\n\n11\nFootball\n2\n\n\n12\nGolf\n2\n\n\n14\nHandball\n2\n\n\n16\nHockey sur gazon\n2\n\n\n20\nNatation synchronisée\n2\n\n\n21\nPentathlon moderne\n2\n\n\n\n\n\nAinsi, parmi les disciplines ayant été les moins représentées lors de l’édition des Jeux Olympiques de 2020, on retrouve notamment le football et le golf."
  },
  {
    "objectID": "posts/post-with-code/JO_medailles.html#fonction-calcul_nb_edition.int",
    "href": "posts/post-with-code/JO_medailles.html#fonction-calcul_nb_edition.int",
    "title": "Les jeux olympiques : médailles des athlètes",
    "section": "Fonction calcul_nb_edition.int",
    "text": "Fonction calcul_nb_edition.int\nLe but de cette fonction est de calculer le nombre d’éditions auxquelles une épreuve a été présente aux Jeux Olympiques pour les années données. Pour ce faire, la fonction effectue les étapes suivantes :\n\nSoustrait l’année donnée de 2020.\nDivise le résultat par la fréquence des Jeux Olympiques, qui correspond à 4 car les Jeux ont lieu tous les quatre ans.\nAjoute une édition supplémentaire pour l’édition 2020.\nTient compte des éditions qui n’ont pas eu lieu, notamment en raison des guerres mondiales.\n\nCette fonction ne prend en compte que des caractères numériques en entrée.\n\ncalcul_nb_editions.int &lt;- function(depuis) {\n \n  editions &lt;- (((2020-depuis) / 4) +1)\n  \n  if (depuis &lt;= 1916) {\n    editions &lt;- editions - 3\n  } else if (depuis &lt;= 1940){\n        editions &lt;- editions - 2}\n      else if (depuis &lt;= 1944){ \n        editions &lt;- editions - 1}\n  \n  return(editions)\n}\n\ncalcul_nb_editions.int(1920)\n\n[1] 24\n\n\nDonc, pour une épreuve présente depuis 1920, la fonction dénombrera 24 éditions au total."
  },
  {
    "objectID": "posts/post-with-code/JO_medailles.html#fonction-calcul_nb_edition.str",
    "href": "posts/post-with-code/JO_medailles.html#fonction-calcul_nb_edition.str",
    "title": "Les jeux olympiques : médailles des athlètes",
    "section": "Fonction calcul_nb_edition.str",
    "text": "Fonction calcul_nb_edition.str\nOn a repris la fonction qui permet de calculer le nombre d’édition mais on l’adapte maintenant au chaîne de caractère. La fonction prend donc en compte trois possibilités pour les chaînes de caractères représentant les années :\n\nSi l’année indiquée est de la forme “1904-1924”, alors la fonction soustrait 1904 de 1924, divise le résultat par la fréquence des Jeux Olympiques, et ajoute “+1” pour l’année 1924.\nSi l’année indiquée est de la forme “depuis 1904” (ou “Depuis”), la fonction fonctionnera de la même manière que pour le calcul standard du nombre d’éditions.\nSi l’année indiquée est unique, la fonction comptera simplement une édition supplémentaire.\n\nCette fonction continue de prendre en compte les années où les Jeux Olympiques n’ont pas eu lieu en raison des guerres mondiales, afin de fournir un calcul précis du nombre d’éditions pour une épreuve donnée.\n\ncalcul_nb_editions.str &lt;- function(annees) {\n \n  annees &lt;- gsub(\"\\\\s+\", \"\", annees)\n  years &lt;- unlist(strsplit(annees, \",\"))\n\n \n  nb_editions &lt;- 0\n\n  \n  for (annee in years) {\n    if (grepl(\"-\", annee)) {\n      range &lt;- as.numeric(unlist(strsplit(annee, \"-\")))\n      nb_editions &lt;- nb_editions + (((range[2] - range[1]) %/% 4 )+1)\n      \n     \n      if (range[2] &gt;= 1944) nb_editions &lt;- nb_editions - 3\n      else if (range[2] &gt;= 1940) nb_editions &lt;- nb_editions - 2\n      else if (range[2] &gt;= 1916) nb_editions &lt;- nb_editions - 1\n    } \n    \n    else if (grepl(\"depuis\", tolower(annee))) {\n      debut &lt;- as.numeric(gsub(\"[^0-9]\", \"\", annee))\n      nb_editions &lt;- nb_editions + ((2024 - debut) %/% 4)\n    \n      if (debut &lt;= 1916) nb_editions &lt;- nb_editions - 3\n      else if (debut &lt;= 1940) nb_editions &lt;- nb_editions - 2\n      else if (debut &lt;= 1944) nb_editions &lt;- nb_editions - 1\n    } else {\n      \n     \n      nb_editions &lt;- nb_editions + 1\n    }\n  }\n\n  return(nb_editions)\n}\nnb_editions &lt;-calcul_nb_editions.str(\"1896, 1904, depuis 1920\")\nnb_editions\n\n[1] 26\n\n\nPar exemple, si l’on indique qu’une discipline a été présente aux JO en 1896, 1904 et depuis 1920, alors la fonction a compté 2 dates uniques et ajouté le nombre d’éditions calculé avec “depuis 1920”. Ici, la fonction nous retourne 26 éditions."
  },
  {
    "objectID": "posts/post-with-code/JO_medailles.html#fonction-calcul_nb_edition",
    "href": "posts/post-with-code/JO_medailles.html#fonction-calcul_nb_edition",
    "title": "Les jeux olympiques : médailles des athlètes",
    "section": "Fonction calcul_nb_edition",
    "text": "Fonction calcul_nb_edition\nNotre fonction permet donc de calculer le nombre d’éditions auxquelles une discipline est présente aux JO, que l’on renseigne une année précise ou une chaîne de caractères.\n\ncalcul_nb_editions &lt;- function(x) {\n  if(is.character(x)) {\n    calcul_nb_editions.str(x)\n  } else if(is.numeric(x)) {\n    calcul_nb_editions.int(x)\n  }\n}\n\ncalcul_nb_editions(\"1904-1924, depuis 1948\")\n\n[1] 24\n\ncalcul_nb_editions(2000)\n\n[1] 6\n\n\nAinsi, la fonction nous retourne 24 éditions pour la chaîne de caractère “1904-1924, depuis 1948” et 6 éditions pour l’année 2000."
  },
  {
    "objectID": "posts/post-with-code/JO_medailles.html#fonction-calcul_medailles_individuelles",
    "href": "posts/post-with-code/JO_medailles.html#fonction-calcul_medailles_individuelles",
    "title": "Les jeux olympiques : médailles des athlètes",
    "section": "Fonction calcul_medailles_individuelles",
    "text": "Fonction calcul_medailles_individuelles\nL’objectif de cette fonction est de fournir le nombre maximal de médailles obtenues par un athlète lors des olympiades dans une même cellule. Cette fonction prend en compte la possibilité que plusieurs athlètes puissent être mentionnés et permet ainsi de les distinguer. Elle identifie le nombre maximal de médailles attribuées à un seul athlète au sein d’une cellule donnée, offrant ainsi une analyse claire et précise des performances individuelles aux Jeux Olympiques.\n\ncalcul_medailles_individuelles &lt;- function(data){ \n  athletes &lt;- unlist(str_split(data,\"\\\\)\\\\s\",simplify=TRUE))\n  resultats &lt;- numeric(length(athletes))\n  \n  for (i in seq_along(athletes)){\n    medailles &lt;- str_extract_all(athletes[i],\"\\\\d+\")\n    \n    if (length(medailles[[1]])&gt;0){\n      chiffres&lt;- as.integer(medailles[[1]])\n      resultats[i] &lt;-sum(chiffres)\n    }\n  }\n  \nreturn(resultats[resultats !=0])\n\n}\n\ncalcul_medailles_individuelles(c(\"Larissa Latynina (URS) (9-5-4)\", \"Teddy Riner (FRA) (3-0-2) Ryōko Tani (JPN) (2-2-1)\",\"Elisabeta Lipă (ROU) (5-2-1)\",\"    \nIsabell Werth (GER) (7-5-0)\",\"Ana Fernández (CUB) (3-0-1) Kerri Walsh (USA) (3-0-1) Inna Ryskal (URS) (2-2-0) Sérgio Dutra Santos (BRA) (2-2-0) Sergey Tetyukhin (RUS) (1-1-2)\"))\n\n [1] 18  5  8 12  4  5  4  4  4  4\n\n\nAinsi, Larissa Latynina a reçu 18 médailles, Teddy Riner en a reçu 5, etc.\nÀ présent, nous souhaitons identifier les 3 athlètes ayant reçu le plus de médailles en appliquant la fonction précédemment créée à toute la colonne “Athletes_medailles”. Cela nous permettra de déterminer le nombre de médailles reçues par chacun des athlètes, facilitant ainsi l’identification des trois athlètes les plus médaillés.\n\nresultats_medailles_ete &lt;- lapply(sport_ete$Athletes_medailles,calcul_medailles_individuelles)\nhead(resultats_medailles_ete)\n\n[[1]]\n[1] 12\n\n[[2]]\n[1] 8\n\n[[3]]\n[1] 4\n\n[[4]]\n[1] 5\n\n[[5]]\n [1] 3 3 3 3 3 3 3 3 3 3\n\n[[6]]\n[1] 12\n\n\nNous pouvons donc à présent déterminer les athlètes ayant reçu le plus de médailles. Pour cela, nous utilisons un code qui parcourt les résultats des médailles d’été pour chaque sport, extrait les noms des athlètes et le nombre de médailles correspondantes, puis les stocke dans un tibble. Enfin, il rassemble tous les résultats dans une liste, les combine en un seul tibble et identifie les trois athlètes avec le plus grand nombre de médailles d’été.\n\nlist_medaille_ete &lt;- list()\n\nfor (i in seq_along(resultats_medailles_ete)) {\n  matches &lt;- str_match_all(sport_ete$Athletes_medailles[i],\"([^\\\\(]+\\\\s\\\\([^\\\\)]+\\\\))\\\\s*\\\\((\\\\d+)-(\\\\d+)-(\\\\d+)\\\\)\")\n  \n  df&lt;- tibble(\n    Athlete = trimws(matches[[1]][,1]),\n    Medailles=resultats_medailles_ete[[i]]\n)\n  list_medaille_ete[[i]]&lt;-df\n}\n\ntop_medailles_ete&lt;-do.call(rbind,list_medaille_ete)\nknitr::kable(head(top_medailles_ete))\n\n\n\n\nAthlete\nMedailles\n\n\n\n\nPaavo Nurmi (FIN) (9-3-0)\n12\n\n\nElisabeta Lipă (ROU) (5-2-1)\n8\n\n\nGao Ling (CHN) (2-1-1)\n4\n\n\nTeresa Edwards (USA) (4-0-1)\n5\n\n\nLászló Papp (HUN) (3-0-0)\n3\n\n\nFélix Savón (CUB) (3-0-0)\n3\n\n\n\n\ntop_3_medailles_ete &lt;- head(top_medailles_ete[order(top_medailles_ete$Medailles, decreasing = TRUE), ], 3)\nknitr::kable(top_3_medailles_ete)\n\n\n\n\nAthlete\nMedailles\n\n\n\n\nMichael Phelps (USA) (23-3-2)\n28\n\n\nLarissa Latynina (URS) (9-5-4)\n18\n\n\nEdoardo Mangiarotti (ITA) (6-5-2)\n13\n\n\n\n\n\nAinsi, nous apprenons que les athlètes ayant reçu le plus de médailles sont Michael Phelps avec 28 médailles, suivi de Larissa Latynina avec 18 médailles à la deuxième place, et pour terminer Edoardo Mangiarotti avec 13 médailles."
  },
  {
    "objectID": "posts/post-with-code/JO_medailles.html#fonction-extraire_nationalite_athlete",
    "href": "posts/post-with-code/JO_medailles.html#fonction-extraire_nationalite_athlete",
    "title": "Les jeux olympiques : médailles des athlètes",
    "section": "Fonction extraire_nationalite_athlete",
    "text": "Fonction extraire_nationalite_athlete\nLe but de cette fonction est d’extraire la nationalité des athlètes afin d’analyser la présence des différentes nationalités. Pour cela,on utilise des expressions régulières pour extraire les segments entre parenthèses représentant les nationalités des athlètes, puis on compte le nombre d’occurrences de chaque nationalité et on retourne le résultat.\n\nextraire_nationalite_athlete &lt;- function(chaine) {\n  segments &lt;- unlist(str_extract_all(chaine, \"\\\\([^\\\\)]+\\\\)\"))\n  nationalites &lt;- character(length = length(segments))\n  \n  for (i in seq_along(segments)) {\n    matches &lt;- str_match(segments[i], \"\\\\((\\\\w{3})\\\\)$\")\n    if (!is.na(matches[2])) {\n      nationalites[i] &lt;- matches[2]\n    }\n  }\n  \n  counts &lt;- table(nationalites)\n  \n  return(counts)\n}\n\nknitr::kable(extraire_nationalite_athlete(c(\"László Papp (HUN) (3-0-0) Félix Savón (CUB) (3-0-0) Teófilo Stevenson (CUB) (3-0-0)\",\"Aladár Gerevich (HUN) (7-1-2)\n\",\"Christie Rampone (USA) (3-1-0) Shannon Boxx (USA) (3-0-0) Heather Mitts (USA) (3-0-0) Heather O'Reilly (USA) (3-0-0)\n\")))\n\n\n\n\nnationalites\nFreq\n\n\n\n\n\n8\n\n\nCUB\n2\n\n\nHUN\n2\n\n\nUSA\n4\n\n\n\n\n\nAvant de déterminer quelles nationalités sont les plus présentes, nous devons appliquer la fonction à l’ensemble de notre jeu de données.\n\nresultat_nationalite_ete &lt;- lapply(sport_ete$Athletes_or,extraire_nationalite_athlete)\nhead(resultat_nationalite_ete)\n\n[[1]]\nnationalites\n    FIN USA \n  2   1   1 \n\n[[2]]\nnationalites\n    GBR ROU \n  3   1   2 \n\n[[3]]\nnationalites\n    CHN KOR \n  9   8   1 \n\n[[4]]\nnationalites\n    USA \n  5   5 \n\n[[5]]\nnationalites\n    CUB HUN \n  3   2   1 \n\n[[6]]\nnationalites\n    GER \n  1   1 \n\n\nNous pouvons donc à présent déterminer la nationalité la plus présente parmi les athlètes. De la même manière que pour la fonction calcul_medailles_individuelles, nous utilisons un code qui parcourt les résultats des médailles d’or pour chaque sport d’été, extrait les nationalités des athlètes et compte le nombre total d’occurrences de chaque nationalité. Ensuite, il crée un tibble pour stocker ces données et les assemble dans une liste. Enfin, il combine tous les résultats en un seul tibble, agrège le total des occurrences par nationalité, puis identifie les trois nationalités les plus présentes.\n\nlist_nationalite_ete &lt;- list()\n\nfor (i in seq_along(sport_ete$Athletes_or)) {\n  matches &lt;- str_match_all(sport_ete$Athletes_or[i], \"\\\\((\\\\w{3})\\\\)\")\n  \n  nationalites_ete &lt;- matches[[1]][,2]\n  \n  total_occurrences &lt;- table(nationalites_ete)\n  \n  df &lt;- tibble(\n    Nationalite = names(total_occurrences),\n    Total = as.integer(total_occurrences)\n  )\n  \n  list_nationalite_ete[[i]] &lt;- df\n}\n\ntop_nationalites_ete &lt;- do.call(rbind, list_nationalite_ete)\n\ntop_nationalites_ete &lt;- aggregate(Total ~ Nationalite, data = top_nationalites_ete, sum)\n\ntop_3_nationalites_ete &lt;- head(top_nationalites_ete[order(top_nationalites_ete$Total, decreasing = TRUE), ], 3)\nknitr::kable(top_3_nationalites_ete)\n\n\n\n\n\nNationalite\nTotal\n\n\n\n\n21\nUSA\n21\n\n\n3\nCHN\n13\n\n\n4\nCUB\n8\n\n\n\n\n\nAinsi, nous apprenons que les nationalités les plus présentes sont les États-Unis avec 21 athlètes médaillés d’or, suivis par la Chine avec 13, et enfin Cuba avec 8 athlètes médaillés d’or."
  },
  {
    "objectID": "posts/post-with-code/JO_medailles.html#médaillés-des-jeux-olympiques-dhiver",
    "href": "posts/post-with-code/JO_medailles.html#médaillés-des-jeux-olympiques-dhiver",
    "title": "Les jeux olympiques : médailles des athlètes",
    "section": "Médaillés des jeux olympiques d’hiver",
    "text": "Médaillés des jeux olympiques d’hiver\nCette fois, nous travaillerons sur les médaillés des Jeux Olympiques d’hiver. De la même manière, nous préparons notre base de données et corrigeons les erreurs possibles.\n\nsport_hiver &lt;- data.frame(list_tables[2])\n\n\nsport_hiver &lt;- sport_hiver[-1,-1]\n\nnames(sport_hiver)&lt;-c(\"Discipline\", \"Annees\", \"Editions\", \"Epreuves_2020\", \"Or\", \"Argent\", \"Bronze\", \"Total\", \"Athletes_medailles\", \"Athletes_or\")\n\nsport_hiver[c(\"Editions\", \"Epreuves_2020\", \"Or\", \"Argent\", \"Bronze\", \"Total\")] &lt;- lapply(sport_hiver[c(\"Editions\", \"Epreuves_2020\", \"Or\", \"Argent\", \"Bronze\", \"Total\")], as.integer)\n\nstr(sport_hiver)\n\n'data.frame':   15 obs. of  10 variables:\n $ Discipline        : chr  \"Biathlon\" \"Bobsleigh\" \"Combiné nordique\" \"Curling\" ...\n $ Annees            : chr  \"1924,Depuis 1960\" \"1924-1956,depuis 1964\" \"Depuis 1924\" \"1924,depuis 1998\" ...\n $ Editions          : int  16 21 22 4 23 14 24 22 7 22 ...\n $ Epreuves_2020     : int  11 3 3 2 2 4 4 12 8 4 ...\n $ Or                : int  54 39 28 7 24 37 77 152 32 38 ...\n $ Argent            : int  54 37 28 7 24 35 75 155 32 39 ...\n $ Bronze            : int  54 39 28 7 24 36 76 148 32 37 ...\n $ Total             : int  162 115 84 21 72 108 228 455 96 114 ...\n $ Athletes_medailles: chr  \"Ole Einar Bjørndalen (NOR) (8-4-1)\" \"Bogdan Musiol (RDA) (1-5-1)\" \"Felix Gottwald (AUT) (3-1-3)\" \"Anna Le Moine (SWE) (2-0-0) Cathrine Lindahl (SWE) (2-0-0) Eva Lund (SWE) (2-0-0) Anette Norberg (SWE) (2-0-0)\\\"| __truncated__ ...\n $ Athletes_or       : chr  \"Ole Einar Bjørndalen (NOR) (8-4-1)\" \"Kevin Kuske (GER) (4-1-0) André Lange (GER) (4-1-0)\" \"Samppa Lajunen (FIN) (3-2-0)\\n Eric Frenzel (GER) (3-1-2)\\n Felix Gottwald (AUT) (3-1-3) Johan Grøttumsbråten (\"| __truncated__ \"Anna Le Moine (SWE) (2-0-0) Cathrine Lindahl (SWE) (2-0-0) Eva Lund (SWE) (2-0-0) Anette Norberg (SWE) (2-0-0)\\\"| __truncated__ ...\n\nknitr::kable(head(sport_hiver))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDiscipline\nAnnees\nEditions\nEpreuves_2020\nOr\nArgent\nBronze\nTotal\nAthletes_medailles\nAthletes_or\n\n\n\n\n2\nBiathlon\n1924,Depuis 1960\n16\n11\n54\n54\n54\n162\nOle Einar Bjørndalen (NOR) (8-4-1)\nOle Einar Bjørndalen (NOR) (8-4-1)\n\n\n3\nBobsleigh\n1924-1956,depuis 1964\n21\n3\n39\n37\n39\n115\nBogdan Musiol (RDA) (1-5-1)\nKevin Kuske (GER) (4-1-0) André Lange (GER) (4-1-0)\n\n\n4\nCombiné nordique\nDepuis 1924\n22\n3\n28\n28\n28\n84\nFelix Gottwald (AUT) (3-1-3)\nSamppa Lajunen (FIN) (3-2-0)\n\n\n\nEric Frenzel (GER) (3-1-2) Felix Gottwald (AUT) (3-1-3) Johan Grøttumsbråten (NOR) (3-1-2) Thorleif Haug (NOR) (3-0-0) Ulrich Wehling (RDA) (3-0-0) | |5 |Curling |1924,depuis 1998 | 4| 2| 7| 7| 7| 21|Anna Le Moine (SWE) (2-0-0) Cathrine Lindahl (SWE) (2-0-0) Eva Lund (SWE) (2-0-0) Anette Norberg (SWE) (2-0-0) Kaitlyn Lawes (CAN) (2-0-0) John Morris (CAN) (2-0-0) Kevin Martin (CAN) (1-1-0) Torger Nergård (NOR) (1-1-0) Mirjam Ott (SUI) (0-2-0) |Anna Le Moine (SWE) (2-0-0) Cathrine Lindahl (SWE) (2-0-0) Eva Lund (SWE) (2-0-0) Anette Norberg (SWE) (2-0-0) Kaitlyn Lawes (CAN) (2-0-0) John Morris (CAN) (2-0-0) | |6 |Hockey sur glace |Été : 1920Hiver : Depuis 1924[1] | 23| 2| 24| 24| 24| 72|Jayna Hefford (CAN) (4-1-0) Hayley Wickenheiser (CAN) (4-1-0) |Jayna Hefford (CAN) (4-1-0) Hayley Wickenheiser (CAN) (4-1-0) Caroline Ouellette (CAN) (4-0-0) | |7 |Luge |Depuis 1964 | 14| 4| 37| 35| 36| 108|Armin Zöggeler (ITA) (2-1-3) |Natalie Geisenberger (GER) (4-0-1) Tobias Arlt (GER) (4-0-0) Tobias Wendl (GER) (4-0-0) |\n\n\nNous allons maintenant chercher à appliquer les fonctions calcul_medailles_individuelles et extraire_nationalite_athlete sur la base de données des Jeux Olympiques d’hiver.\nDe la même manière que pour les Jeux Olympiques d’été, nous appliquons à l’ensemble du jeu de données la fonction calcul_medailles_individuelles, mais cette fois-ci avec la fonction map du package purrr et non plus la fonction lapply. La principale différence entre les deux fonction est que map peut être utilisé avec des structures de données de type liste, vecteur, ou data frame, tandis que lapply est spécifiquement conçu pour les listes.\n\nresultats_medailles_hiver &lt;- map(sport_hiver$Athletes_medailles, calcul_medailles_individuelles)\nhead(resultats_medailles_hiver)\n\n[[1]]\n[1] 13\n\n[[2]]\n[1] 7\n\n[[3]]\n[1] 7\n\n[[4]]\n[1] 2 2 2 2 2 2 2 2 2\n\n[[5]]\n[1] 5 5\n\n[[6]]\n[1] 6\n\n\nNous observons qu’il n’y a pas de différence significative entre les deux fonctions.\nMaintenant que la fonction est appliquée à l’ensemble de nos données, on peut chercher quels athlètes ont été le plus médaillés pour les Jeux Olympiques d’hiver.\n\nlist_medaille_hiver &lt;- list()\n\nfor (i in seq_along(resultats_medailles_hiver)) {\n  matches &lt;- str_match_all(sport_hiver$Athletes_medailles[i],\"([^\\\\(]+\\\\s\\\\([^\\\\)]+\\\\))\\\\s*\\\\((\\\\d+)-(\\\\d+)-(\\\\d+)\\\\)\")\n  \n  df&lt;- tibble(\n    Athlete = trimws(matches[[1]][,1]),\n    Medailles=resultats_medailles_hiver[[i]]\n)\n  list_medaille_hiver[[i]]&lt;-df\n}\n\ntop_medailles_hiver&lt;-do.call(rbind,list_medaille_hiver)\nknitr::kable(head(top_medailles_hiver))\n\n\n\n\nAthlete\nMedailles\n\n\n\n\nOle Einar Bjørndalen (NOR) (8-4-1)\n13\n\n\nBogdan Musiol (RDA) (1-5-1)\n7\n\n\nFelix Gottwald (AUT) (3-1-3)\n7\n\n\nAnna Le Moine (SWE) (2-0-0)\n2\n\n\nCathrine Lindahl (SWE) (2-0-0)\n2\n\n\nEva Lund (SWE) (2-0-0)\n2\n\n\n\n\ntop_3_medailles_hiver &lt;- head(top_medailles_hiver[order(top_medailles_hiver$Medailles, decreasing = TRUE), ], 3)\nknitr::kable(top_3_medailles_hiver)\n\n\n\n\nAthlete\nMedailles\n\n\n\n\nMarit Bjørgen (NOR) (8-4-3)\n15\n\n\nOle Einar Bjørndalen (NOR) (8-4-1)\n13\n\n\nIreen Wüst (NED) (5-5-1)\n11\n\n\n\n\n\nNous apprenons ainsi que les 3 athlètes avec le plus de médailles sont Marit Bjørgen avec un total de 15 médailles, suivi de Ole Einar Bjørndalen avec 13 médailles, et pour compléter le tableau, Ireen Wüst avec 11 médailles.\nNous allons à présent appliquer la fonction extraire_nationalite_athletes, mais également avec la fonction map du package purrr et non plus la fonction lapply.\n\nresultat_nationalite_hiver &lt;- map(sport_hiver$Athletes_or,extraire_nationalite_athlete)\n\nhead(resultat_nationalite_hiver)\n\n[[1]]\nnationalites\n    NOR \n  1   1 \n\n[[2]]\nnationalites\n    GER \n  2   2 \n\n[[3]]\nnationalites\n    AUT FIN GER NOR RDA \n  6   1   1   1   2   1 \n\n[[4]]\nnationalites\n    CAN SWE \n  6   2   4 \n\n[[5]]\nnationalites\n    CAN \n  3   3 \n\n[[6]]\nnationalites\n    GER \n  3   3 \n\n\nDe la même manière que pour la fonction précédente, nous observons qu’il n’y a pas de différence significative entre les deux fonctions.\nMaintenant que la fonction est appliquée à l’ensemble de nos données, on peut chercher quels athlètes ont été le plus médaillés pour les Jeux Olympiques d’hiver.\n\nlist_nationalite_hiver &lt;- list()\n\nfor (i in seq_along(sport_hiver$Athletes_or)) {\n  matches &lt;- str_match_all(sport_hiver$Athletes_or[i], \"\\\\((\\\\w{3})\\\\)\")\n  \n  nationalites_hiver &lt;- matches[[1]][,2]\n  \n  total_occurrences &lt;- table(nationalites_hiver)\n  \n  df &lt;- tibble(\n    Nationalite = names(total_occurrences),\n    Total = as.integer(total_occurrences)\n  )\n  \n  list_nationalite_hiver[[i]] &lt;- df\n}\n\ntop_nationalites_hiver &lt;- do.call(rbind, list_nationalite_hiver)\n\ntop_nationalites_hiver &lt;- aggregate(Total ~ Nationalite, data = top_nationalites_hiver, sum)\n\ntop_3_nationalites_hiver &lt;- head(top_nationalites_hiver[order(top_nationalites_hiver$Total, decreasing = TRUE), ], 3)\nknitr::kable(top_3_nationalites_hiver)\n\n\n\n\n\nNationalite\nTotal\n\n\n\n\n2\nCAN\n8\n\n\n7\nNOR\n7\n\n\n6\nGER\n6\n\n\n\n\n\nNous apprenons ainsi que pour les Jeux Olympiques d’hiver, les nationalités les plus présentes pour les médailles d’or sont en premier le Canada avec 8 médaillés, suivis de la Norvège avec 7 et pour finir l’Allemagne avec 6 médaillés d’or."
  },
  {
    "objectID": "posts/post-with-code/JO_positions_sites.html",
    "href": "posts/post-with-code/JO_positions_sites.html",
    "title": "Les jeux olympiques : position des sites",
    "section": "",
    "text": "L’objectif de ce rapport est de travailler sur la répartition et la position des sites des jeux olympiques et paralympiques."
  },
  {
    "objectID": "posts/post-with-code/JO_positions_sites.html#librairies",
    "href": "posts/post-with-code/JO_positions_sites.html#librairies",
    "title": "Les jeux olympiques : position des sites",
    "section": "Librairies",
    "text": "Librairies\nDans le cadre de ce rapport, nous nous appuierons sur des bibliothèques disponibles dans le CRAN :\n\nlibrary(tidyverse) \nlibrary(dplyr)\nlibrary(readxl) \nlibrary(geosphere)"
  },
  {
    "objectID": "posts/post-with-code/JO_positions_sites.html#présentation-de-la-base-de-données",
    "href": "posts/post-with-code/JO_positions_sites.html#présentation-de-la-base-de-données",
    "title": "Les jeux olympiques : position des sites",
    "section": "Présentation de la base de données",
    "text": "Présentation de la base de données\nNous disposons d’une base de données fournissant des informations sur les sites olympiques et paralympiques de la région parisienne.\n\ndata_ex &lt;- read.csv2(\"~/R avancé/paris-2024-sites-olympiques-et-paralympiques-franciliens.csv\") \n\nknitr::kable(head(data_ex))\n\n\n\n\n\n\n\n\n\n\ngeo_point\nnom\nsites_olympiques_paralympiques\nsports\n\n\n\n\n48.841319, 2.253076\nParc des Princes\nSite olympique\nFootball\n\n\n48.924388, 2.359871\nStade de France\nSite olympique,Site paralympique\nAthlétisme,Para athlétisme,Rugby\n\n\n48.751095, 2.0759\nGolf national\nSite olympique\nGolf\n\n\n48.788046, 2.034987\nVélodrome National de Saint-Quentin-en-Yvelines\nSite olympique,Site paralympique\nCyclisme sur piste,Para cyclisme sur piste\n\n\n48.84732, 2.245501\nStade Roland Garros\nSite olympique,Site paralympique\nTennis,Tennis fauteuil,Boxe\n\n\n48.911184, 2.546395\nClichy-sous-Bois\nSite paralympique\nPara cyclisme sur route\n\n\n\n\nknitr::kable(names(data_ex))\n\n\n\n\nx\n\n\n\n\ngeo_point\n\n\nnom\n\n\nsites_olympiques_paralympiques\n\n\nsports\n\n\n\n\n\nCette base de données comporte quatre colonnes de type texte :\n\n“Geo_point” : Cette colonne représente le point géographique du site olympique.\n“Nom” : Il s’agit du nom du site.\n“Site_olympiques_paralympiques” : Cette colonne catégorise le nom du site comme étant dédié aux Jeux Olympiques, aux Jeux Paralympiques ou aux deux.\n“Sports” : Correspondant aux sports proposés sur le site."
  },
  {
    "objectID": "posts/post-with-code/JO_positions_sites.html#sites-olympiques",
    "href": "posts/post-with-code/JO_positions_sites.html#sites-olympiques",
    "title": "Les jeux olympiques : position des sites",
    "section": "Sites olympiques",
    "text": "Sites olympiques\nDans un premier temps, nous nous concentrons sur les sites qui accueilleront les disciplines olympiques. Pour ce faire, nous avons filtré les données pour identifier les sites olympiques, puis nous avons examiné quels sites présentaient exclusivement les Jeux Olympiques et ceux qui accueillaient à la fois les Jeux Paralympiques et Olympiques.\n\ndiscipline_olympique&lt;-data_ex |&gt; \n  filter(sites_olympiques_paralympiques != \"Site paralympique\" & !sites_olympiques_paralympiques==\"\") |&gt; \n  select(nom, sites_olympiques_paralympiques)\n\n\nsites_multiples_jeux &lt;- subset(data_ex, grepl(\",\",sites_olympiques_paralympiques))\n\ndiscipline_olympique_exclusivement &lt;- data_ex |&gt; \n  filter(data_ex$sites_olympiques_paralympiques==\"Site olympique\") |&gt; \n  select(nom, sites_olympiques_paralympiques)\n\nknitr::kable(head(discipline_olympique))\n\n\n\n\n\n\n\n\nnom\nsites_olympiques_paralympiques\n\n\n\n\nParc des Princes\nSite olympique\n\n\nStade de France\nSite olympique,Site paralympique\n\n\nGolf national\nSite olympique\n\n\nVélodrome National de Saint-Quentin-en-Yvelines\nSite olympique,Site paralympique\n\n\nStade Roland Garros\nSite olympique,Site paralympique\n\n\nArena Paris Sud 4 (Porte de Versailles)\nSite olympique,Site paralympique\n\n\n\n\nknitr::kable(head(discipline_olympique_exclusivement))\n\n\n\n\nnom\nsites_olympiques_paralympiques\n\n\n\n\nParc des Princes\nSite olympique\n\n\nGolf national\nSite olympique\n\n\nHôtel de ville de Paris\nSite olympique\n\n\nPont d’Iéna\nSite olympique\n\n\nStade de la Concorde\nSite olympique\n\n\nStade Yves du Manoir\nSite olympique\n\n\n\n\ncount(sites_multiples_jeux)\n\n   n\n1 16\n\n\nDonc, parmi les 26 sites répertoriés comme des sites pour les Jeux Olympiques, nous avons :\n\n10 sites exclusivement dédiés aux Jeux Olympiques.\n16 sites qui serviront également aux Jeux Paralympiques."
  },
  {
    "objectID": "posts/post-with-code/JO_positions_sites.html#sites-paralympiques",
    "href": "posts/post-with-code/JO_positions_sites.html#sites-paralympiques",
    "title": "Les jeux olympiques : position des sites",
    "section": "Sites paralympiques",
    "text": "Sites paralympiques\nEnsuite, notre attention se porte sur les sites où se dérouleront des disciplines paralympiques. De la même manière, nous avons trié les données pour identifier les sites qui accueilleront exclusivement les Jeux Paralympiques.\n\ndiscipline_paralympique_exclusivement &lt;- data_ex |&gt; \n  filter(data_ex$sites_olympiques_paralympiques==\"Site paralympique\") |&gt; \n  select(nom, sites_olympiques_paralympiques)\n\nknitr::kable(head(discipline_paralympique_exclusivement))\n\n\n\n\nnom\nsites_olympiques_paralympiques\n\n\n\n\nClichy-sous-Bois\nSite paralympique\n\n\nStade Pierre de Coubertin\nSite paralympique\n\n\nTerrain des Essences - La Courneuve\nSite paralympique\n\n\n\n\ncount(sites_multiples_jeux)\n\n   n\n1 16\n\n\nDe la même façon, parmi les 19 sites répertoriés comme des sites pour les Jeux Paralympiques :\n\n3 sites sont exclusivement dédiés aux Jeux Paralympiques.\n16 sites serviront également aux Jeux Olympiques."
  },
  {
    "objectID": "posts/post-with-code/JO_positions_sites.html#disciplines-sportives",
    "href": "posts/post-with-code/JO_positions_sites.html#disciplines-sportives",
    "title": "Les jeux olympiques : position des sites",
    "section": "Disciplines sportives",
    "text": "Disciplines sportives\nEnsuite, nous avons examiné si certains sites accueilleront plusieurs disciplines en filtrant les données pour identifier les sites où plusieurs sports sont présentés, séparés par une virgule.\n\nsites_multiples_disciplines &lt;- subset(data_ex, grepl(\",\",sports))\n\nsites_multiples_disciplines &lt;- sites_multiples_disciplines |&gt; \n  select(nom,sports)\n\ndim(sites_multiples_disciplines)\n\n[1] 19  2\n\n\nAinsi, nous avons identifié un total de 19 sites qui accueilleront plusieurs disciplines sportives."
  },
  {
    "objectID": "posts/post-with-code/JO_positions_sites.html#discipline-paralympiques",
    "href": "posts/post-with-code/JO_positions_sites.html#discipline-paralympiques",
    "title": "Les jeux olympiques : position des sites",
    "section": "Discipline paralympiques",
    "text": "Discipline paralympiques\nEnsuite, nous avons cherché à déterminer quelles disciplines paralympiques seront présentées aux Jeux Olympiques. Pour ce faire, nous avons examiné les sports présentés, puis nous avons filtré les données en utilisant des mots-clés associés aux sports paralympiques, tels que “para” ou “fauteuil”. Cette démarche nous permettra d’identifier les sites et les installations qui accueilleront des disciplines paralympiques,\n\nliste_sport&lt;-(unlist(strsplit(data_ex$sports, \",\")))\n\nknitr::kable(head(unique(liste_sport)))\n\n\n\n\nx\n\n\n\n\nFootball\n\n\nAthlétisme\n\n\nPara athlétisme\n\n\nRugby\n\n\nGolf\n\n\nCyclisme sur piste\n\n\n\n\nmots_cles_paralympiques &lt;- c(\"Para\", \"fauteuil\", \"assis\", \"Goalball\", \"Cécifoot\", \"Boccia\")\n\nsports_paralympiques &lt;- liste_sport[grep(paste(mots_cles_paralympiques, collapse = \"|\"), liste_sport, ignore.case = TRUE)]\n\nknitr::kable(unique(sports_paralympiques))\n\n\n\n\nx\n\n\n\n\nPara athlétisme\n\n\nPara cyclisme sur piste\n\n\nTennis fauteuil\n\n\nPara cyclisme sur route\n\n\nPara tennis de table\n\n\nBasket fauteuil\n\n\nVolley-ball assis\n\n\nGoalball\n\n\nPara judo\n\n\nRugby fauteuil\n\n\nPara natation\n\n\nPara canoë\n\n\nPara aviron\n\n\nBoccia\n\n\nCécifoot\n\n\nPara Badminton\n\n\nPara powerlifting\n\n\nPara équitation\n\n\nEscrime fauteuil\n\n\nPara taekwondo\n\n\nPara tir à l’arc\n\n\n\n\n\nAinsi, sur un total de 60 sports répertoriés, nous avons identifié 21 disciplines paralympiques."
  },
  {
    "objectID": "posts/post-with-code/JO_positions_sites.html#site-avec-le-plus-de-disciplines-différentes",
    "href": "posts/post-with-code/JO_positions_sites.html#site-avec-le-plus-de-disciplines-différentes",
    "title": "Les jeux olympiques : position des sites",
    "section": "Site avec le plus de disciplines différentes",
    "text": "Site avec le plus de disciplines différentes\nPour répondre à cette question, nous avons comptabilisé le nombre de sports séparés par une virgule sur chaque site, puis établi un classement pour identifier le site présentant le plus grand nombre de disciplines différentes.\n\ntop_sites_disciplines &lt;-data_ex |&gt; \n  mutate(nombre_sports_par_site = sapply(strsplit(sports, \",\"), length)) |&gt;\n  arrange(desc(nombre_sports_par_site)) |&gt; \n  select(nom,sports)\n\nknitr::kable(head(top_sites_disciplines))\n\n\n\n\n\n\n\n\nnom\nsports\n\n\n\n\nArena Bercy\nBasketball,Basket fauteuil,Gymnastique artistique,trampoline\n\n\nArena Paris nord\nBoxe,Escrime,Pentathlon moderne,Volley-ball assis\n\n\nStade de la Concorde\nBasketball 3x3,BMX freestyle,Breaking,Skateboard\n\n\nArena Champs de Mars\nJudo,Para judo,Lutte,Rugby fauteuil\n\n\nStade nautique\nCanoë,Para canoë,Aviron,Para aviron\n\n\nArena La Chapelle\nBadminton,Para Badminton,Gymnastique rythmique,Para powerlifting\n\n\n\n\n\nLes sites qui présenteront le plus de disciplines sont donc :\n\nArena Bercy\nArena Paris nord\nStade de la Concorde\nArena Champs de Mars\nStade nautique\nArena La Chapelle\n\nCes sites se distinguent par leur capacité à accueillir un large éventail de disciplines sportives, ce qui en fait des centres névralgiques pour les compétitions olympiques et paralympiques."
  },
  {
    "objectID": "posts/post-with-code/JO_positions_sites.html#discipline-sur-le-plus-de-sites",
    "href": "posts/post-with-code/JO_positions_sites.html#discipline-sur-le-plus-de-sites",
    "title": "Les jeux olympiques : position des sites",
    "section": "Discipline sur le plus de sites",
    "text": "Discipline sur le plus de sites\nPour déterminer quelle discipline sera présente sur le plus de sites, nous avons repris la liste des sites et compté le nombre d’occurrences de chaque discipline. Cette analyse nous permettra d’identifier les sports les plus largement représentés parmi les installations olympiques et paralympiques.\n\nknitr::kable(names(which.max(table(liste_sport))))\n\n\n\n\nx\n\n\n\n\nAthlétisme\n\n\n\n\nathletisme &lt;- data_ex %&gt;%\n  filter(str_detect(sports, \"\\\\bAthlétisme\\\\b\")) |&gt; \n  select(nom)\n\nknitr::kable(athletisme)\n\n\n\n\nnom\n\n\n\n\nStade de France\n\n\nHôtel de ville de Paris\n\n\nPont d’Iéna\n\n\nInvalides\n\n\n\n\n\nAinsi, l’athlétisme sera présenté sur le plus grand nombre de sites, avec une participation à quatre endroits différents : Invalides, Stade de France, Pont d’Iéna et à l’Hôtel de ville de Paris."
  },
  {
    "objectID": "posts/post-with-code/JO_positions_sites.html#les-deux-sites-les-plus-proches",
    "href": "posts/post-with-code/JO_positions_sites.html#les-deux-sites-les-plus-proches",
    "title": "Les jeux olympiques : position des sites",
    "section": "Les deux sites les plus proches",
    "text": "Les deux sites les plus proches\nAfin d’’obtenir les deux sites les plus proches géographiquement, nous avons d’abord séparé la colonne “Geo_point”, représentant les points géographiques, en deux colonnes distinctes : “longitude” et “latitude”. Ensuite, nous avons créé une matrice des distances entre chaque paire de sites, ce qui nous a permis d’obtenir la distance séparant chaque site de tous les autres. En trouvant le minimum de cette matrice, nous pouvons identifier les deux sites les plus proches géographiquement.\n\ndata_ex &lt;- data_ex |&gt; \n  separate(geo_point, into = c(\"longitude\", \"latitude\"), sep = \",\", convert = TRUE)\n\ndistances &lt;- distm(data_ex[, c(\"longitude\", \"latitude\")]) \nknitr::kable(head(distances))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0.000\n14994.16\n22012.615\n24832.861\n1071.062\n33351.95\n4172.704\n11010.448\n4552.029\n13871.633\n32785.437\n4367.077\n8002.525\n9967.902\n5436.878\n6573.658\n42447.43\n3584.272\n5074.375\n24880.77606\n13652.78\n833.3774\n14553.6339\n12765.031\n19131.401\n22162.524\n20652.453\n32096.71\n7113.483\n7047.768\n21361.30\n\n\n14994.162\n0.00\n36845.171\n38994.598\n15278.096\n20677.35\n13072.002\n7569.071\n10711.822\n9756.168\n18372.990\n13018.177\n7813.608\n12188.601\n10177.966\n14743.146\n31346.48\n13251.237\n10273.503\n39054.19246\n2778.30\n15066.1573\n491.3778\n3034.703\n33034.548\n7501.499\n5805.394\n45928.23\n8346.506\n8620.941\n6850.05\n\n\n22012.615\n36845.17\n0.000\n6112.658\n21593.585\n54988.42\n25167.420\n32658.008\n26545.912\n34848.413\n54796.194\n25315.149\n29966.046\n27746.316\n27362.743\n23406.819\n63195.74\n24723.941\n27058.705\n6075.04177\n35663.68\n22137.3956\n36382.0110\n34313.570\n7154.723\n44148.776\n42592.614\n12647.06\n29110.344\n29010.899\n43360.81\n\n\n24832.861\n38994.60\n6112.658\n0.000\n24193.635\n58184.57\n28490.760\n35816.810\n29351.001\n38398.646\n57289.967\n28659.868\n32803.235\n28580.426\n30267.337\n24635.826\n67008.99\n27980.620\n29879.238\n91.63529\n38204.91\n25141.6838\n38511.9131\n36231.425\n6015.380\n46463.849\n44799.989\n7431.91\n31879.198\n31855.195\n45739.49\n\n\n1071.062\n15278.10\n21593.585\n24193.635\n0.000\n34021.49\n5184.889\n11759.508\n5171.874\n14737.659\n33256.968\n5379.493\n8614.166\n9306.323\n6124.772\n5653.510\n43253.08\n4595.610\n5700.897\n24244.25894\n14108.49\n1884.3781\n14823.5319\n12900.220\n18422.115\n22557.542\n21001.796\n31406.89\n7685.572\n7671.124\n21776.71\n\n\n33351.954\n20677.35\n54988.421\n58184.570\n34021.490\n0.00\n29838.663\n22390.785\n28850.476\n20242.590\n7332.942\n29685.221\n25411.791\n32865.412\n27919.935\n35060.368\n11341.61\n30306.284\n28321.436\n58232.15212\n20452.95\n33059.7654\n21149.5722\n23707.172\n52442.335\n13947.068\n15721.425\n65428.38\n26356.276\n26350.718\n14221.82\n\n\n\n\ndistance_min&lt;-min(distances[distances &gt; 0])\nknitr::kable(distance_min)\n\n\n\n\nx\n\n\n\n\n91.63529\n\n\n\n\nplus_proches &lt;- which(distances == distance_min, arr.ind = TRUE)\n\nsite_1_proche&lt;- data_ex[plus_proches[1,1],\"nom\"] \nknitr::kable(site_1_proche)\n\n\n\n\nx\n\n\n\n\nStade BMX de Saint-Quentin-en-Yvelines\n\n\n\n\nsite_2_proche &lt;-data_ex[plus_proches[1,2],\"nom\"]\nknitr::kable(site_2_proche)\n\n\n\n\nx\n\n\n\n\nVélodrome National de Saint-Quentin-en-Yvelines\n\n\n\n\n\nLes deux sites les plus proches sont le stade BMX de Saint-Quentin-en-Yvelines et le Vélodrome national de Saint-Quentin-en-Yvelines avec une distance de 91,64 mètres."
  },
  {
    "objectID": "posts/post-with-code/JO_positions_sites.html#les-deux-sites-les-plus-éloignés",
    "href": "posts/post-with-code/JO_positions_sites.html#les-deux-sites-les-plus-éloignés",
    "title": "Les jeux olympiques : position des sites",
    "section": "Les deux sites les plus éloignés",
    "text": "Les deux sites les plus éloignés\nPour déterminer les deux sites les plus éloignés, nous utilisons toujours la matrice des distances que nous avons créée précédemment. En identifiant les distances maximales dans cette matrice, nous pouvons identifier les deux sites les plus éloignés les uns des autres.\n\ndistance_max&lt;-max(distances[distances &gt; 0])\nknitr::kable(distance_max)\n\n\n\n\nx\n\n\n\n\n74388.55\n\n\n\n\nplus_éloignés &lt;- which(distances == distance_max, arr.ind = TRUE)\n\nsite_1_eloigne&lt;- data_ex[plus_éloignés[1,1],\"nom\"] \nknitr::kable(site_1_eloigne)\n\n\n\n\nx\n\n\n\n\nColline d’Elancourt\n\n\n\n\nsite_2_eloigne &lt;-data_ex[plus_éloignés[1,2],\"nom\"]\nknitr::kable(site_2_eloigne)\n\n\n\n\nx\n\n\n\n\nStade nautique\n\n\n\n\n\nAussi, les deux sites les plus éloignés sont la colline d’Elancourt et le Stade nautique avec une distance de 74388,55 mètres."
  },
  {
    "objectID": "posts/post-with-code/JO_positions_sites.html#barycentre-de-lensemble-des-sites",
    "href": "posts/post-with-code/JO_positions_sites.html#barycentre-de-lensemble-des-sites",
    "title": "Les jeux olympiques : position des sites",
    "section": "Barycentre de l’ensemble des sites",
    "text": "Barycentre de l’ensemble des sites\nDans l’objectif d’investir dans les biens immobiliers, il faut calculer la longitude et la latitude moyennes des sites pour optimiser les recherches immobilières en vue des Jeux Olympiques. En obtenant ces coordonnées moyennes, vous pouvez déterminer le point central autour duquel se situent les sites. Cette approche peut vous aider à maximiser les opportunités d’investissement en vous concentrant sur des emplacements stratégiques qui offrent une accessibilité optimale aux sites olympiques et paralympiques.\n\nlongitude_moy&lt;-mean(data_ex$longitude)\nlatitude_moy&lt;-mean(data_ex$latitude)\n\nbarycentre &lt;- tidygeocoder::reverse_geo(longitude_moy,latitude_moy)\nknitr::kable(barycentre)\n\n\n\n\n\n\n\n\n\nlat\nlong\naddress\n\n\n\n\n48.86684\n2.29757\n23, Avenue Pierre 1er de Serbie, Quartier de Chaillot, Paris 16e Arrondissement, Paris, Île-de-France, France métropolitaine, 75116, France\n\n\n\n\n\nSi un investisseur souhaite rechercher un bien immobilier placé au barycentre de l’ensemble des sites olympiques et paralympiques, le quartier de Chaillot dans le 16ème arrondissement de Paris pourrait être une excellente option. Situé au cœur de la capitale, ce quartier offre un accès facile et rapide à de nombreux sites sportifs importants."
  }
]