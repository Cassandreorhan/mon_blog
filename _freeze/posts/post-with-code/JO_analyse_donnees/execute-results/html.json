{
  "hash": "a47d59676f79eb0dc2ab9cf96b0c82ef",
  "result": {
    "markdown": "---\ntitle: \"Les jeux olympiques : Analyse de données\"\nauthor: \"Cassandre Orhan\"\ndate: \"2024-03-09\"\ncategories: [news, code, analysis]\n---\n\n\nL'objectif de ce projet est d'analyser les données des Jeux Olympiques afin de comprendre les performances des athlètes, l'évolution des disciplines et les tendances temporelles.\n\n## Librairies\n\nDans le cadre de ce rapport, nous nous appuierons sur des bibliothèques disponibles dans le CRAN.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(stringr)\nlibrary(lubridate)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(jsonlite)\nlibrary(RSQLite)\n```\n:::\n\n\n## Préparation de la base de données\n\nNous avons dans un premier temps cherché à Listez les fichiers présents dans le dossier data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::kable(list.files(\"data/\"))\n```\n\n::: {.cell-output-display}\n|x                      |\n|:----------------------|\n|data.sqlite            |\n|olympics_athletes.json |\n|R avancé.Rproj         |\n|tokyo_athletes.parquet |\n:::\n:::\n\n\nLes fichiers présents dans le dossier data sont au nombres de quatre : data.sqlite ; olympics_athletes.json et tokyo_athletes.parquet.\n\nLes extensions des différents fichiers sont :\n\n-   `data.sqlite` : L'extension de ce fichier est `.sqlite`, ce qui indique qu'il s'agit d'une base de données SQLite.\n\n-   `olympics_athletes.json` : L'extension de ce fichier est `.json`, ce qui indique qu'il s'agit d'un fichier JSON.\n\n-   `tokyo_athletes.parquet` : L'extension de ce fichier est `.parquet`, ce qui indique qu'il s'agit d'un fichier au format Parquet.\n\n### .parquet\n\nNous avons ensuite chercher à lire le fichier .parquet en utilisant la librairie arrow.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntokyo <- arrow::read_parquet(\"data/tokyo_athletes.parquet\")\ndim(tokyo)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 11085     3\n```\n:::\n\n```{.r .cell-code}\nknitr::kable(names(tokyo))\n```\n\n::: {.cell-output-display}\n|x          |\n|:----------|\n|Name       |\n|NOC        |\n|Discipline |\n:::\n:::\n\n\nLe fichier tokyo comprend 11085 données et 3 colonnes qui sont : \"Name\" , \"NOC\" et \"Discipline\"\n\n### .Json\n\nEnsuite nous avons chercher à lire le fichier le fichier .json en utilisant la librairie jsonlite.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nliste_fichier_json <- list.files(\"data/\",pattern = \"*.json\", full.names = T)\ndata_athletes <- fromJSON(liste_fichier_json)\n```\n:::\n\n\n### Connexion\n\nLe code suivant, liste les fichiers SQLite dans le dossier \"data/\", se connecte à chacun d'eux et récupère la liste des tables présentes dans chaque base de données SQLite, puis affiche les noms de ces tables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconnexion<- dbConnect(RSQLite::SQLite(), list.files(\"data/\",pattern = \"*.sqlite\", full.names = T))\ndbListTables(connexion)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"olympics_athletes\" \"tokyo_athletes\"    \"tokyo_medals\"     \n[4] \"tokyo_teams\"      \n```\n:::\n:::\n\n\nLes tables présentes dans cette table sont olympics_athletes, tokyo_athletes, tokyo_medals et tokyo_teams.\n\nCréons à présent 2 tables avec dbWriteTable :\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndbWriteTable(connexion,\"olympics_athletes\",data_athletes,overwrite = TRUE)\ndbWriteTable(connexion,\"tokyo_athletes\",tokyo,overwrite=TRUE)\n```\n:::\n\n\nAnalysons olympics_athletes :\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndbListFields(connexion, \"olympics_athletes\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"ID\"     \"Name\"   \"Sex\"    \"Age\"    \"Height\" \"Weight\" \"Team\"   \"NOC\"   \n [9] \"Games\"  \"City\"   \"Sport\"  \"Event\"  \"Medal\" \n```\n:::\n:::\n\n\nLes colonnes de la table \"olympics_athletes\" sont : \"ID\", \"Name\", \"Sex\", \"Age\", \"Height\", \"Weight\", \"Team\", \"NOC\", \"Games\", \"City\", \"Sport\", \"Event\", \"Medal\".\n\nDans ces instructions, nous lisons la table \"olympics_athletes\" depuis la base de données, la convertissons en tibble et stockons le résultat.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nolympics_athletes <- dbReadTable(connexion, \"olympics_athletes\",data_athletes)\nolympics_athletes <- as_tibble(olympics_athletes)\nknitr::kable(head(olympics_athletes))\n```\n\n::: {.cell-output-display}\n| ID|Name                     |Sex | Age| Height| Weight|Team           |NOC |Games       |City      |Sport         |Event                              |Medal |\n|--:|:------------------------|:---|---:|------:|------:|:--------------|:---|:-----------|:---------|:-------------|:----------------------------------|:-----|\n|  1|A Dijiang                |M   |  24|    180|     80|China          |CHN |1992 Summer |Barcelona |Basketball    |Basketball Men's Basketball        |NA    |\n|  2|A Lamusi                 |M   |  23|    170|     60|China          |CHN |2012 Summer |London    |Judo          |Judo Men's Extra-Lightweight       |NA    |\n|  3|Gunnar Nielsen Aaby      |M   |  24|     NA|     NA|Denmark        |DEN |1920 Summer |Antwerpen |Football      |Football Men's Football            |NA    |\n|  4|Edgar Lindenau Aabye     |M   |  34|     NA|     NA|Denmark/Sweden |DEN |1900 Summer |Paris     |Tug-Of-War    |Tug-Of-War Men's Tug-Of-War        |Gold  |\n|  5|Christine Jacoba Aaftink |F   |  21|    185|     82|Netherlands    |NED |1988 Winter |Calgary   |Speed Skating |Speed Skating Women's 500 metres   |NA    |\n|  5|Christine Jacoba Aaftink |F   |  21|    185|     82|Netherlands    |NED |1988 Winter |Calgary   |Speed Skating |Speed Skating Women's 1,000 metres |NA    |\n:::\n:::\n\n\n### Colonne \"Sex\"\n\nDans cette instruction, nous convertissons la colonne \"Sex\" en variable catégorielle\n\n\n::: {.cell}\n\n```{.r .cell-code}\nolympics_athletes <- olympics_athletes %>%\n  mutate(Sex = as.factor(Sex))\n```\n:::\n\n\n### Colonne Games\n\nDans cette série d'instructions, nous scindons la colonne \"Games\" en deux colonnes distinctes, \"Year\" et \"Season\", puis nous ajoutons une colonne booléenne \"isSummer\" pour indiquer si les jeux sont d'été ou d'hiver, enfin nous supprimons la colonne \"Season\".\n\n\n::: {.cell}\n\n```{.r .cell-code}\nolympics_athletes <- olympics_athletes %>%\n  separate(col = Games, into = c(\"Year\", \"Season\"), sep = \" \", convert = TRUE) %>%\n  mutate(isSummer = Season == \"Summer\") %>%\n  select(-Season)\n```\n:::\n\n\n## Moyenne d'âge\n\nNous nous sommes ensuite intéressé à la moyenne d'âge pour chaque édition des JO d'été.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmoyenne_age_par_edition <- olympics_athletes %>%\n  filter(isSummer) %>%\n  group_by(Year) %>%\n  summarize(moyenne_age = mean(Age, na.rm = TRUE))\n\nedition_plus_jeune <- moyenne_age_par_edition %>%\n  filter(moyenne_age == min(moyenne_age, na.rm = TRUE))\n\nedition_plus_vieille <- moyenne_age_par_edition %>%\n  filter(moyenne_age == max(moyenne_age, na.rm = TRUE))\n\nknitr::kable(edition_plus_jeune)\n```\n\n::: {.cell-output-display}\n| Year| moyenne_age|\n|----:|-----------:|\n| 1896|    23.58065|\n:::\n\n```{.r .cell-code}\nknitr::kable(edition_plus_vieille)\n```\n\n::: {.cell-output-display}\n| Year| moyenne_age|\n|----:|-----------:|\n| 1932|     30.1956|\n:::\n:::\n\n\nNous apprenons ainsi que l'édition avec la moyenne d'âge la plus jeune était celle de 1896, avec un âge de 23 ans et l'édition avec la moyenne d'âge la plus âgé était celle de 1932, avec un âge de 30 ans.\n\n## Taille des athlètes\n\nCe code supprime les lignes contenant des valeurs manquantes, puis il identifie la discipline sportive des athlètes féminines participant aux jeux d'été ayant la plus grande taille moyenne, en calculant la taille maximale pour chaque discipline. Enfin, il compte le nombre de fois où chaque discipline a été celle avec les athlètes les plus grandes dans chaque édition des jeux olympiques d'été. Ce code a été principalement réalisé avec le package tibble.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nolympics_athletes <- olympics_athletes %>%\n   drop_na()\n\ndiscipline_max_taille <- olympics_athletes %>%\n  filter(Sex == \"F\" & isSummer) %>%\n  group_by(Sport) %>%\n  summarize(max_taille = max(Height, na.rm = TRUE)) %>%\n  filter(max_taille == max(max_taille)) %>%\n  select(Sport)\n\n\nknitr::kable(discipline_max_taille)\n```\n\n::: {.cell-output-display}\n|Sport      |\n|:----------|\n|Basketball |\n:::\n\n```{.r .cell-code}\ndiscipline_max_taille_par_edition <- olympics_athletes %>%\n  filter(Sex == \"F\") %>%\n  group_by(Year, Sport) %>%\n  summarize(max_taille = max(Height, na.rm = TRUE), .groups = \"drop\") %>%\n  group_by(Year) %>%\n  filter(max_taille == max(max_taille, na.rm = TRUE))\n\n\nknitr::kable(head(discipline_max_taille_par_edition))\n```\n\n::: {.cell-output-display}\n| Year|Sport          | max_taille|\n|----:|:--------------|----------:|\n| 1920|Figure Skating |        165|\n| 1924|Swimming       |        167|\n| 1928|Athletics      |        181|\n| 1932|Athletics      |        182|\n| 1936|Athletics      |        182|\n| 1948|Athletics      |        179|\n:::\n\n```{.r .cell-code}\nnombre_max_taille_par_discipline <- discipline_max_taille_par_edition %>%\n  count(Sport, name = \"Nombre_total_éditions\")\n\ntotal_par_discipline <- nombre_max_taille_par_discipline %>%\n  group_by(Sport) %>%\n  summarize(Total = sum(Nombre_total_éditions))\ntotal_par_discipline <- head(total_par_discipline[order(total_par_discipline$Total, decreasing = TRUE), ], 3)\n\n\nknitr::kable(total_par_discipline)\n```\n\n::: {.cell-output-display}\n|Sport      | Total|\n|:----------|-----:|\n|Athletics  |    10|\n|Basketball |    10|\n|Ice Hockey |     2|\n:::\n:::\n\n\nOn constate que le basketball compte parmi les disciplines où les athlètes féminines sont les plus grandes, que le patinage artistique était la discipline présentant les athlètes les plus grandes en 1920, et que tout au long des différentes éditions, l'athlétisme et le basketball ont été les sports qui ont compté le plus grand nombre d'athlètes de grande taille.\"\n\n## Dates éditions\n\nCe code extrait toutes les dates au format \"jour mois année\" présentes dans le texte et les stocke dans une liste appelée `dates`, puis affiche cette liste.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntexte <- \"Les jeux olympiques d’été se déroulent normalement tous les 4 ans, durant les mois de Juillet et Août. Les jeux de Rio ont eu lieu du 5 Août 2016 au 20 Août 2016, ceux de Tokyo du 23 Juillet 2021 au 8 Août 2021, et ceux de Paris auront lieu du 26 Juillet 2024 au 11 Août 2024. Plus de 10000 athlètes sont attendus du monde entier à Paris.\"\n\nregex_date <- \"\\\\d{1,2} (?:Janvier|Février|Mars|Avril|Mai|Juin|Juillet|Août|Septembre|Octobre|Novembre|Décembre) \\\\d{4}\"\n\ndates <- str_extract_all(texte, regex_date)\n\nprint(dates)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\n[1] \"5 Août 2016\"     \"20 Août 2016\"    \"23 Juillet 2021\" \"8 Août 2021\"    \n[5] \"26 Juillet 2024\" \"11 Août 2024\"   \n```\n:::\n:::\n\n\n### Mois\n\nCe code extrait les dates des éditions des Jeux Olympiques à partir d'un texte, puis remplace les noms des mois par leur numéro pour les rendre convertibles en date.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndates_modifiees <- str_replace_all(texte, c(\"Janvier\" = \"01\", \"Février\" = \"02\", \"Mars\" = \"03\", \"Avril\" = \"04\", \n                                            \"Mai\" = \"05\", \"Juin\" = \"06\", \"Juillet\" = \"07\", \"Août\" = \"08\", \n                                            \"Septembre\" = \"09\", \"Octobre\" = \"10\", \"Novembre\" = \"11\", \"Décembre\" = \"12\"))\n\n\nknitr::kable(dates_modifiees)\n```\n\n::: {.cell-output-display}\n|x                                                                                                                                                                                                                                                                                                                         |\n|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n|Les jeux olympiques d’été se déroulent normalement tous les 4 ans, durant les mois de 07 et 08. Les jeux de Rio ont eu lieu du 5 08 2016 au 20 08 2016, ceux de Tokyo du 23 07 2021 au 8 08 2021, et ceux de Paris auront lieu du 26 07 2024 au 11 08 2024. Plus de 10000 athlètes sont attendus du monde entier à Paris. |\n:::\n:::\n\n\n### Date\n\nCe code extrait les dates des éditions des Jeux Olympiques à partir d'un texte modifié, puis les convertit en format de date (jour-mois-année).\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntexte_modifie <- \"Les jeux olympiques d’été se déroulent normalement tous les 4 ans, durant les mois de 07 et 08. Les jeux de Rio ont eu lieu du 5 08 2016 au 20 08 2016, ceux de Tokyo du 23 07 2021 au 8 08 2021, et ceux de Paris auront lieu du 26 07 2024 au 11 08 2024. Plus de 10000 athlètes sont attendus du monde entier à Paris.\"\n\nregex_date_bis <- \"\\\\d{1,2} \\\\d{2} \\\\d{4}\"\n\ndates <- str_extract_all(texte_modifie, regex_date_bis)\n\ndates_converties <- lapply(dates, function(date_str) dmy(date_str))\n\ndates_converties\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\n[1] \"2016-08-05\" \"2016-08-20\" \"2021-07-23\" \"2021-08-08\" \"2024-07-26\"\n[6] \"2024-08-11\"\n```\n:::\n:::\n\n\n### Différence entre les éditions\n\nCe code calcule les différences en jours et en semaines entre les dates des Jeux Olympiques de Rio et Tokyo, ainsi que entre les dates des Jeux Olympiques de Tokyo et Paris.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#différence en jours entre Rio et Tokyo\njours_rio_tokyo <- difftime(dates_converties[[1]][3],dates_converties[[1]][2], units = \"days\")\n\njours_rio_tokyo\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTime difference of 1798 days\n```\n:::\n\n```{.r .cell-code}\n#différence en semaines\nsemaines_rio_tokyo <- difftime(dates_converties[[1]][3],dates_converties[[1]][2], units = \"weeks\")\n\nsemaines_rio_tokyo\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTime difference of 256.8571 weeks\n```\n:::\n\n```{.r .cell-code}\n#différence en jours entre Tokyo et Paris\njours_tokyo_paris <- difftime(dates_converties[[1]][5],dates_converties[[1]][4], units = \"days\")\n\njours_tokyo_paris\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTime difference of 1083 days\n```\n:::\n\n```{.r .cell-code}\n#différence en semaines\nsemaines_tokyo_paris <- difftime(dates_converties[[1]][5],dates_converties[[1]][4], units = \"weeks\")\n\nsemaines_tokyo_paris\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTime difference of 154.7143 weeks\n```\n:::\n\n```{.r .cell-code}\nsemaines_rio_tokyo\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTime difference of 256.8571 weeks\n```\n:::\n:::\n\n\nAinsi, nous constatons que l'écart entre les Jeux Olympiques de Rio en 2016 et ceux de Tokyo en 2021 était de 1798 jours, soit environ 256,9 semaines entre le début et la fin de chaque édition. De manière similaire, l'intervalle entre les Jeux précédents de Tokyo et ceux de Paris en 2024 est de 1083 jours, équivalant à environ 154,7 semaines.\n\nL'intervalle entre les Jeux de Rio et ceux de Tokyo est presque 2 ans plus long que celui entre les Jeux de Tokyo et ceux de Paris.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}